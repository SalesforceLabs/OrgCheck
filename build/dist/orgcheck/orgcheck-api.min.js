"use strict";class e{created}class t{has(e){throw new Error("Not implemented")}get(e){throw new Error("Not implemented")}set(e,t){throw new Error("Not implemented")}details(){throw new Error("Not implemented")}remove(e){throw new Error("Not implemented")}clear(){throw new Error("Not implemented")}}const s=new RegExp("(\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*\\n|\\n)","gi"),a=new RegExp("(?:public|global)\\s+(?:interface)\\s+\\w+(\\s+(?:extends)\\s+\\w+)?\\s*\\{","i"),r=new RegExp("(?:public|global)\\s+(?:enum)\\s+\\w+\\s*\\{","i"),i=new RegExp("@IsTest\\s*\\(.*SeeAllData=true.*\\)","i"),n=new RegExp("(System.assert(Equals|NotEquals|)\\s*\\(|Assert\\.[a-zA-Z]*\\s*\\()","ig"),o=new RegExp("(\\.salesforce\\.com|\\.force\\.)","ig"),c=new RegExp("[a-zA-Z0-9]{5}0[a-zA-Z0-9]{9}([a-zA-Z0-9]{3})?","ig"),l=new RegExp("\\[\\s*(?:SELECT|FIND)"),d=new RegExp("(?:insert|update|delete)\\s*(?:\\s\\w+|\\(|\\[)");class p{static RemoveComments(e){return e?.replaceAll(s," ")||""}static IsInterface(e){return null!==e?.match(a)||!1}static IsEnum(e){return null!==e?.match(r)||!1}static CountOfHardCodedURLs(e){return e?.match(o)?.length||0}static CountOfHardCodedIDs(e){return e?.match(c)?.length||0}static IsTestSeeAllData(e){return null!==e?.match(i)||!1}static CountOfAsserts(e){return e?.match(n)?.length||0}static HasSOQL(e){return null!==e?.match(l)||!1}static HasDML(e){return null!==e?.match(d)||!1}}class g{static create(e,t){if(e.errors?.includes(t))return{hadError:!0,using:[],referenced:[],referencedByTypes:{}};const s=e.records.filter((e=>e.id===t)).map((e=>({id:e.refId,name:e.refName,type:e.refType,url:e.refUrl}))),a={};return{hadError:!1,using:s,referenced:e.records.filter((e=>e.refId===t)).map((e=>(void 0===a[e.type]?a[e.type]=1:a[e.type]++,{id:e.id,name:e.name,type:e.type,url:e.url}))),referencedByTypes:a}}}class u{static create(){return new h}}class h{constructor(){this._columnIds=new Set,this._columns=new Map,this._rows=new Map}toDataMatrix(){const e=[];return this._columnIds.forEach((t=>{e.push(this._columns.has(t)?this._columns.get(t):t)})),{columnHeaders:e,rows:Array.from(this._rows.values())}}addValueToProperty(e,t,s){!1===this._rows.has(e)&&this._rows.set(e,{header:{},data:{}}),this._rows.get(e).data[t]=s,this._columnIds.add(t)}hasColumnHeader(e){return this._columns.has(e)}setColumnHeader(e,t){this._columns.set(e,t)}hasRowHeader(e){return this._rows.has(e)&&this._rows.get(e).header}setRowHeader(e,t){!0===this._rows.has(e)?this._rows.get(e).header=t:this._rows.set(e,{header:t,data:{}})}_columnIds;_columns;_rows}class m{static get label(){return console.error("Need to implement static label() method for",this,JSON.stringify(this),this.name),this.name}score;badFields;badReasonIds}class f extends m{dependencies}class S{}class E{getInstance(e){throw new Error("Not implemented")}}class I{create(e){throw new Error("Not implemented")}computeScore(e){throw new Error("Not implemented")}createWithScore(e){throw new Error("Not implemented")}}class w{alias;cacheKey;parameters;constructor(e,t){this.alias=e,this.cacheKey=t,this.parameters=new Map}}class P{log(e,t){throw new TypeError('You need to implement the method "log()"')}ended(e,t){throw new TypeError('You need to implement the method "ended()"')}failed(e,t){throw new TypeError('You need to implement the method "failed()"')}}class R extends P{toSimpleLogger(e){throw new TypeError('You need to implement the method "toSimpleLogger()"')}}class T{currentUsageRatio=0;currentUsagePercentage="";get yellowThresholdPercentage(){return.7}get redThresholdPercentage(){return.9}get isGreenZone(){return this.currentUsageRatio<.7}get isYellowZone(){return this.currentUsageRatio>=.7&&this.currentUsageRatio<.9}get isRedZone(){return this.currentUsageRatio>=.9}}class C{constructor(e){this._apiLimitExtractor=e,this._lastRequestToSalesforce=void 0,this._lastApiUsage=new T}_apiLimitExtractor;_lastRequestToSalesforce;_lastApiUsage;beforeRequest(e){if(this._lastRequestToSalesforce&&Date.now()-this._lastRequestToSalesforce<=6e4&&this._lastApiUsage.isRedZone){const t=new TypeError(`WATCH DOG: Daily API Request limit is ${y(this._lastApiUsage.currentUsageRatio)}%, and our internal threshold is ${y(this._lastApiUsage.redThresholdPercentage)}%. We stop there to keep your org safe.`);throw e&&e(t),t}}afterRequest(e){const t=this._apiLimitExtractor();t&&(this._lastApiUsage.currentUsageRatio=t.used/t.max,this._lastApiUsage.currentUsagePercentage=y(this._lastApiUsage.currentUsageRatio),this._lastRequestToSalesforce=Date.now(),this.beforeRequest(e))}get dailyApiRequestLimitInformation(){return this._lastApiUsage}}const y=(e,t=2)=>(100*e).toFixed(t);class b extends S{static get label(){return"Apex Test Result"}methodName;isSuccessful;runtime;stacktrace}class O extends f{static get label(){return"Apex Class"}id;name;url;apiVersion;package;isTest;isTestSeeAllData;nbSystemAsserts;isAbstract;isClass;isEnum;isInterface;innerClassesCount;isSchedulable;isScheduled;interfaces;extends;methodsCount;testPassedMethods;testFailedMethods;lastTestRunDate;testMethodsRunTime;annotations;specifiedSharing;specifiedAccess;length;sourceCode;nbHardCodedURLs;nbHardCodedIDs;needsRecompilation;coverage;relatedTestClassIds;relatedTestClassRefs;relatedClassIds;relatedClassRefs;createdDate;lastModifiedDate}class A{get apiVersion(){throw new Error("Not implemented")}caseSafeId(e){throw new Error("Not implemented")}setupUrl(e,t,s,a){throw new Error("Not implemented")}getObjectType(e,t){throw new Error("Not implemented")}get dailyApiRequestLimitInformation(){throw new Error("Not implemented")}async soqlQuery(e,t){throw new Error("Not implemented")}async dependenciesQuery(e,t){throw new Error("Not implemented")}async readMetadata(e,t){throw new Error("Not implemented")}async readMetadataAtScale(e,t,s,a){throw new Error("Not implemented")}async describeGlobal(e){throw new Error("Not implemented")}async describe(e,t){throw new Error("Not implemented")}async recordCount(e,t){throw new Error("Not implemented")}async runAllTests(e){throw new Error("Not implemented")}async compileClasses(e,t){throw new Error("Not implemented")}}class M{async run(e,t,s,a){throw new TypeError('You need to implement the method "run()"')}}class _{async run(e){throw new TypeError('You need to implement the method "run()"')}clean(e){throw new TypeError('You need to implement the method "clean()"')}}const D={APEXCLASSES:"apex-classes",APEXTRIGGERS:"apex-triggers",APPLICATIONS:"applications",APPPERMISSIONS:"app-permisions",CURRENTUSERPERMISSIONS:"current-user-permissions",CUSTOMFIELDS:"custom-fields",CUSTOMLABELS:"custom-labels",FIELDPERMISSIONS:"field-permissions",FLOWS:"flows",GROUPS:"groups",LIGHTNINGAURACOMPONENTS:"lightning-aura-components",LIGHTNINGPAGES:"lightning-pages",LIGHTNINGWEBCOMPONENTS:"lightning-web-components",OBJECT:"object",OBJECTPERMISSIONS:"object-permissions",OBJECTS:"objects",OBJECTTYPES:"object-types",ORGANIZATION:"org-information",PACKAGES:"packages",PERMISSIONSETS:"permission-sets",PERMISSIONSETLICENSES:"permission-set-licenses",PROFILEPWDPOLICIES:"profile-password-policies",PROFILERESTRICTIONS:"profile-restrictions",PROFILES:"profiles",USERROLES:"user-roles",USERS:"users",VALIDATIONRULES:"validation-rules",VISUALFORCECOMPONENTS:"visual-force-components",VISUALFORCEPAGES:"visual-force-pages",WORKFLOWS:"workflows"};Object.seal(D);class L{static async forEach(e,t){if(!e)return Promise.resolve();if("function"!=typeof t)throw new TypeError("Given iteratee is not a proper Function.");if(!0===Array.isArray(e))return Promise.all(e.map((async e=>(await t(e),null))));if(e instanceof Map==!0){const s=[];return e.forEach(((e,a)=>s.push(new Promise((s=>{t(e,a),s()}))))),Promise.all(s)}throw new TypeError("Given iterable is not a proper Array nor Map.")}static async map(e,t,s){if(!e)return Promise.resolve([]);if(!1===Array.isArray(e))throw new TypeError("Given iterable is not a proper Array.");if("function"!=typeof t)throw new TypeError("Given iteratee is not a proper Function.");if(s&&"function"!=typeof s)throw new TypeError("Given filterIteratee is not a proper Function.");return Promise.all((s?e.filter((e=>s(e))):e).map((async e=>t(e))))}}class N{extract(e,...t){throw new TypeError('You need to implement the method "extract()"')}async transform(e,t,...s){throw new TypeError('You need to implement the method "transform()"')}}class x{async run(e,...t){throw new TypeError('You need to implement the method "run()"')}clean(e,...t){throw new TypeError('You need to implement the method "clean()"')}}const F={ACTIVE_USERS:"active-users",APEX_CLASSES:"apex-classes",APEX_TESTS:"apex-tests",APEX_TRIGGERS:"apex-triggers",APEX_UNCOMPILED:"apex-uncompiled",APP_PERMISSIONS:"app-permissions",CURRENT_USER_PERMISSIONS:"current-user-permissions",CUSTOM_FIELDS:"custom-fields",CUSTOM_LABELS:"custom-labels",FIELD_PERMISSIONS:"field-permissions",FLOWS:"flows",LIGHTNING_AURA_COMPONENTS:"lightning-aura-components",LIGHTNING_PAGES:"lightning-pages",LIGHTNING_WEB_COMPONENTS:"lightning-web-components",OBJECT:"object",OBJECT_PERMISSIONS:"object-permissions",OBJECTS:"objects",OBJECT_TYPES:"object-types",ORGANIZATION:"org-information",PACKAGES:"packages",PERMISSION_SETS:"permission-sets",PERMISSION_SET_LICENSES:"permission-set-licenses",PROCESS_BUILDERS:"process-builders",PROFILE_PWD_POLICIES:"profile-password-policies",PROFILE_RESTRICTIONS:"profile-restrictions",PROFILES:"profiles",PUBLIC_GROUPS:"public-groups",QUEUES:"queues",USER_ROLES:"user-roles",VALIDATION_RULES:"validation-rules",VISUALFORCE_COMPONENTS:"visualforce-components",VISUALFORCE_PAGES:"visualforce-pages",WORKFLOWS:"workflows"};Object.seal(F);const U={ANY_FIELD:"Field",APEX_CLASS:"ApexClass",APEX_TRIGGER:"ApexTrigger",AURA_WEB_COMPONENT:"AuraDefinitionBundle",CUSTOM_BIG_OBJECT:"CustomBigObject",CUSTOM_EVENT:"CustomEvent",CUSTOM_FIELD:"CustomField",CUSTOM_LABEL:"CustomLabel",CUSTOM_METADATA_TYPE:"CustomMetadataType",CUSTOM_OBJECT:"CustomObject",CUSTOM_SETTING:"CustomSetting",CUSTOM_SITE:"CustomSite",CUSTOM_TAB:"CustomTab",EXTERNAL_OBJECT:"ExternalObject",FIELD_SET:"FieldSet",FLOW_DEFINITION:"FlowDefinition",FLOW_VERSION:"Flow",KNOWLEDGE_ARTICLE:"KnowledgeArticle",LIGHTNING_PAGE:"FlexiPage",LIGHTNING_WEB_COMPONENT:"LightningComponentBundle",PAGE_LAYOUT:"Layout",PERMISSION_SET:"PermissionSet",PERMISSION_SET_GROUP:"PermissionSetGroup",PERMISSION_SET_LICENSE:"PermissionSetLicense",PROFILE:"Profile",PUBLIC_GROUP:"PublicGroup",QUEUE:"Queue",RECORD_TYPE:"RecordType",ROLE:"UserRole",TECHNICAL_GROUP:"TechnicalGroup",STANDARD_FIELD:"StandardField",STANDARD_OBJECT:"StandardEntity",STATIC_RESOURCE:"StaticResource",USER:"User",VALIDATION_RULE:"ValidationRule",VISUAL_FORCE_COMPONENT:"ApexComponent",VISUAL_FORCE_PAGE:"ApexPage",WEB_LINK:"WebLink",WORKFLOW_RULE:"WorkflowRule"};Object.seal(U);class v extends S{static get label(){return"SObject Types"}id;label}const G="StandardEntity",$="CustomObject",B="ExternalObject",V="CustomSetting",W="CustomMetadataType",k="CustomEvent",j="KnowledgeArticle",H="CustomBigObject";class Q extends S{static get label(){return"SObject"}id;label;labelPlural;isCustom;isFeedEnabled;isMostRecentEnabled;isSearchable;keyPrefix;name;apiname;url;package;typeId;typeRef;description;externalSharingModel;internalSharingModel;apexTriggerIds;apexTriggerRefs;fieldSets;layouts;flexiPages;limits;validationRules;webLinks;standardFields;customFieldIds;customFieldRefs;recordTypes;relationships;recordCount}class q extends m{static get label(){return"Apex Trigger"}id;name;url;apiVersion;package;length;isActive;beforeInsert;afterInsert;beforeUpdate;afterUpdate;beforeDelete;afterDelete;afterUndelete;objectId;objectRef;hasSOQL;hasDML;nbHardCodedURLs;nbHardCodedIDs;createdDate;lastModifiedDate}class J extends f{static get label(){return"Custom Label"}id;name;package;label;category;isProtected;language;value;url;createdDate;lastModifiedDate}class Y extends f{static get label(){return"Standard or Custom Field"}id;url;name;label;package;description;createdDate;lastModifiedDate;objectId;objectRef;isCustom;tooltip;type;length;isUnique;isEncrypted;isExternalId;isIndexed;defaultValue;isRestrictedPicklist;formula;nbHardCodedURLs;nbHardCodedIDs}class X extends m{static get label(){return"Field Set"}id;label;description;url}class K extends f{static get label(){return"Flow or Process Builder"}id;name;url;apiVersion;currentVersionId;currentVersionRef;isLatestCurrentVersion;isVersionActive;versionsCount;description;type;isProcessBuilder;createdDate;lastModifiedDate}class z extends S{id;name;url;version;apiVersion;totalNodeCount;dmlCreateNodeCount;dmlDeleteNodeCount;dmlUpdateNodeCount;screenNodeCount;isActive;description;type;runningMode;createdDate;lastModifiedDate;sobject;triggerType}class Z extends m{static get label(){return"Public Group or Queue"}id;url;name;developerName;includeBosses;includeSubordinates;relatedId;nbDirectMembers;directUserIds;directUserRefs;directGroupIds;directGroupRefs;isPublicGroup;isQueue;type}class ee extends f{static get label(){return"Aura Component"}id;name;apiVersion;package;createdDate;lastModifiedDate;description;url}class te extends f{static get label(){return"Lightning Page"}id;name;type;package;createdDate;lastModifiedDate;objectId;objectRef;description;url}class se extends f{static get label(){return"Lightning Web Component"}id;name;apiVersion;package;createdDate;lastModifiedDate;description;url}class ae extends m{static get label(){return"SObject Limit"}id;label;remaining;max;used;usedPercentage;type}class re extends m{static get label(){return"Profile"}id;url;name;description;license;isCustom;package;memberCounts;createdDate;lastModifiedDate;nbFieldPermissions;nbObjectPermissions;type;importantPermissions}class ie extends re{static get label(){return"Permission Set or Permission Set Group"}isGroup;groupId}class ne extends m{static get label(){return"Permission Set License"}id;name;totalCount;usedCount;usedPercentage;remainingCount;permissionSetIds;permissionSetRefs;distinctActiveAssigneeCount;status;expirationDate;isAvailableForIntegrations;createDate;lastModifiedDate;url}class oe extends m{static get label(){return"Password Policy from a Profile"}forgotPasswordRedirect;lockoutInterval;maxLoginAttempts;minimumPasswordLength;minimumPasswordLifetime;obscure;passwordComplexity;passwordExpiration;passwordHistory;passwordQuestion;profileName}class ce extends m{static get label(){return"Restrictions from Profile"}profileId;profileRef;ipRanges;loginHours}class le extends S{static get label(){return"IP Range Restriction from Profile"}startAddress;endAddress;description;difference}class de extends S{static get label(){return"Login Hour Restriction from Profile"}fromTime;toTime;day;difference}class pe extends m{static get label(){return"Record Type"}id;name;developerName;url;isActive;isAvailable;isDefaultRecordTypeMapping;isMaster}class ge extends m{static get label(){return"User"}id;url;photoUrl;name;lastLogin;numberFailedLogins;onLightningExperience;lastPasswordChange;profileId;profileRef;aggregateImportantPermissions;permissionSetIds;permissionSetRefs}class ue extends m{static get label(){return"Role"}id;name;apiname;url;parentId;parentRef;level;hasParent;activeMembersCount;activeMemberIds;activeMemberRefs;hasActiveMembers}class he extends m{static get label(){return"Validation Rule"}id;name;isActive;description;errorDisplayField;errorMessage;objectId;objectRef;url}class me extends f{static get label(){return"Visualforce Component"}id;name;apiVersion;nbHardCodedURLs;nbHardCodedIDs;package;createdDate;lastModifiedDate;description;url}class fe extends f{static get label(){return"Visualforce Page"}id;name;apiVersion;nbHardCodedURLs;nbHardCodedIDs;isMobileReady;package;createdDate;lastModifiedDate;description;url}class Se extends m{static get label(){return"Web Link"}id;name;nbHardCodedURLs;nbHardCodedIDs;type;behavior;package;createdDate;lastModifiedDate;description;url}class Ee extends m{static get label(){return"Workflow"}id;name;url;description;actions;futureActions;emptyTimeTriggers;isActive;createdDate;lastModifiedDate;hasAction}const Ie=(e,t,s=3)=>!!(t&&e&&s)&&(e-t)/3>=s,we=e=>("number"!=typeof e||0!==e)&&(!e||(0===e.length||"string"==typeof e&&0===e.trim().length)),Pe=[{id:0,description:"Not referenced anywhere",formula:e=>!1===e.dependencies?.hadError&&we(e.dependencies?.referenced),errorMessage:"This component is not referenced anywhere (as we were told by the Dependency API). Please review the need to keep it in your org.",badField:"dependencies.referenced.length",applicable:[J,K,te,ee,se,me,fe]},{id:1,description:"No reference anywhere for custom field",formula:e=>!0===e.isCustom&&!1===e.dependencies?.hadError&&we(e.dependencies?.referenced),errorMessage:"This custom field is not referenced anywhere (as we were told by the Dependency API). Please review the need to keep it in your org.",badField:"dependencies.referenced.length",applicable:[Y]},{id:2,description:"No reference anywhere for apex class",formula:e=>!1===e.isTest&&!1===e.dependencies?.hadError&&we(e.dependencies?.referenced),errorMessage:"This apex class is not referenced anywhere (as we were told by the Dependency API). Please review the need to keep it in your org.",badField:"dependencies.referenced.length",applicable:[O]},{id:3,description:"Sorry, we had an issue with the Dependency API to gather the dependencies of this item",formula:e=>e.dependencies&&!0===e.dependencies.hadError,errorMessage:"Sorry, we had an issue with the Dependency API to gather the dependencies of this item.",badField:"dependencies.referenced.length",applicable:[Y,O,J,K,te,ee,se,me,fe]},{id:4,description:"API Version too old",formula:e=>Ie(Te.CurrentApiVersion,e.apiVersion),errorMessage:"The API version of this component is too old. Please update it to a newest version.",badField:"apiVersion",applicable:[O,q,K,ee,se,fe,me]},{id:5,description:"No assert in this Apex Test",formula:e=>!0===e.isTest&&0===e.nbSystemAsserts,errorMessage:"This apex test does not contain any assert! Best practices force you to define asserts in tests.",badField:"nbSystemAsserts",applicable:[O]},{id:6,description:"No description",formula:e=>we(e.description),errorMessage:"This component does not have a description. Best practices force you to use the Description field to give some informative context about why and how it is used/set/govern.",badField:"description",applicable:[K,te,ee,se,fe,me,Ee,Se,X,he]},{id:7,description:"No description for custom component",formula:e=>!0===e.isCustom&&we(e.description),errorMessage:"This custom component does not have a description. Best practices force you to use the Description field to give some informative context about why and how it is used/set/govern.",badField:"description",applicable:[Y,ie,re]},{id:8,description:"No explicit sharing in apex class",formula:e=>!1===e.isTest&&!0===e.isClass&&!e.specifiedSharing,errorMessage:"This Apex Class does not specify a sharing model. Best practices force you to specify with, without or inherit sharing to better control the visibility of the data you process in Apex.",badField:"specifiedSharing",applicable:[O]},{id:9,description:"Schedulable should be scheduled",formula:e=>!1===e.isScheduled&&!0===e.isSchedulable,errorMessage:"This Apex Class implements Schedulable but is not scheduled. What is the point? Is this class still necessary?",badField:"isScheduled",applicable:[O]},{id:10,description:"Not able to compile class",formula:e=>!0===e.needsRecompilation,errorMessage:"This Apex Class can not be compiled for some reason. You should try to recompile it. If the issue remains you need to consider refactorying this class or the classes that it is using.",badField:"name",applicable:[O]},{id:11,description:"No coverage for this class",formula:e=>!1===e.isTest&&(isNaN(e.coverage)||!e.coverage),errorMessage:"This Apex Class does not have any code coverage. Consider launching the corresponding tests that will bring some coverage. If you do not know which test to launch just run them all!",badField:"coverage",applicable:[O]},{id:12,description:"Coverage not enough",formula:e=>e.coverage>0&&e.coverage<.75,errorMessage:"This Apex Class does not have enough code coverage (less than 75% of lines are covered by successful unit tests). Maybe you ran not all the unit tests to cover this class entirely? If you did, then consider augmenting that coverage with new test methods.",badField:"coverage",applicable:[O]},{id:13,description:"At least one testing method failed",formula:e=>!0===e.isTest&&e.testFailedMethods&&e.testFailedMethods.length>0,errorMessage:"This Apex Test Class has at least one failed method.",badField:"testFailedMethods",applicable:[O]},{id:14,description:"Apex trigger should not contain SOQL statement",formula:e=>!0===e.hasSOQL,errorMessage:"This Apex Trigger contains at least one SOQL statement. Best practices force you to move any SOQL statement in dedicated Apex Classes that you would call from the trigger. Please update the code accordingly.",badField:"hasSOQL",applicable:[q]},{id:15,description:"Apex trigger should not contain DML action",formula:e=>!0===e.hasDML,errorMessage:"This Apex Trigger contains at least one DML action. Best practices force you to move any DML action in dedicated Apex Classes that you would call from the trigger. Please update the code accordingly.",badField:"hasDML",applicable:[q]},{id:16,description:"Apex Trigger should not contain logic",formula:e=>e.length>5e3,errorMessage:"Due to the massive number of source code (more than 5000 characters) in this Apex Trigger, we suspect that it contains logic. Best practices force you to move any logic in dedicated Apex Classes that you would call from the trigger. Please update the code accordingly.",badField:"length",applicable:[q]},{id:17,description:"No direct member for this group",formula:e=>!e.nbDirectMembers||0===e.nbDirectMembers,errorMessage:"This public group (or queue) does not contain any direct members (users or sub groups). Is it empty on purpose? Maybe you should review its use in your org...",badField:"nbDirectMembers",applicable:[Z]},{id:18,description:"Custom permset or profile with no member",formula:e=>!0===e.isCustom&&0===e.memberCounts,errorMessage:"This custom permission set (or custom profile) has no members. Is it empty on purpose? Maybe you should review its use in your org...",badField:"memberCounts",applicable:[ie,re]},{id:19,description:"Role with no active users",formula:e=>0===e.activeMembersCount,errorMessage:"This role has no active users assigned to it. Is it on purpose? Maybe you should review its use in your org...",badField:"activeMembersCount",applicable:[ue]},{id:20,description:"Active user not under LEX",formula:e=>!1===e.onLightningExperience,errorMessage:"This user is still using Classic. Time to switch to Lightning for all your users, don't you think?",badField:"onLightningExperience",applicable:[ge]},{id:21,description:"Active user never logged",formula:e=>null===e.lastLogin,errorMessage:"This active user never logged yet. Time to optimize your licence cost!",badField:"lastLogin",applicable:[ge]},{id:22,description:"Workflow with no action",formula:e=>!1===e.hasAction,errorMessage:"This workflow has no action, please review it and potentially remove it.",badField:"hasAction",applicable:[Ee]},{id:23,description:"Workflow with empty time triggered list",formula:e=>e.emptyTimeTriggers.length>0,errorMessage:"This workflow is time triggered but with no time triggered action, please review it.",badField:"emptyTimeTriggers",applicable:[Ee]},{id:24,description:"Password policy with question containing password!",formula:e=>!0===e.passwordQuestion,errorMessage:"This profile password policy allows to have password in the question! Please change that setting as it is clearly a lack of security in your org!",badField:"passwordQuestion",applicable:[oe]},{id:25,description:"Password policy with too big expiration",formula:e=>e.passwordExpiration>90,errorMessage:"This profile password policy allows to have password that expires after 90 days. Please consider having a shorter period of time for expiration if you policy.",badField:"passwordExpiration",applicable:[oe]},{id:26,description:"Password policy with no expiration",formula:e=>0===e.passwordExpiration,errorMessage:"This profile password policy allows to have password that never expires. Why is that? Do you have this profile for technical users? Please reconsider this setting and use JWT authentication instead for technical users.",badField:"passwordExpiration",applicable:[oe]},{id:27,description:"Password history too small",formula:e=>e.passwordHistory<3,errorMessage:"This profile password policy allows users to set their password with a too-short memory. For example, they can keep on using the same different password everytime you ask them to change it. Please increase this setting.",badField:"passwordHistory",applicable:[oe]},{id:28,description:"Password minimum size too small",formula:e=>e.minimumPasswordLength<8,errorMessage:"This profile password policy allows users to set passwords with less than 8 charcaters. That minimum length is not strong enough. Please increase this setting.",badField:"minimumPasswordLength",applicable:[oe]},{id:29,description:"Password complexity too weak",formula:e=>e.passwordComplexity<3,errorMessage:"This profile password policy allows users to set too-easy passwords. The complexity you choose is not storng enough. Please increase this setting.",badField:"passwordComplexity",applicable:[oe]},{id:30,description:"No max login attempts set",formula:e=>void 0===e.maxLoginAttempts,errorMessage:"This profile password policy allows users to try infinitely to log in without locking the access. Please review this setting.",badField:"passwordExpiration",applicable:[oe]},{id:31,description:"No lockout period set",formula:e=>void 0===e.lockoutInterval,errorMessage:"This profile password policy does not set a value for any locked out period. Please review this setting.",badField:"lockoutInterval",applicable:[oe]},{id:32,description:"IP Range too large",formula:e=>e.ipRanges.filter((e=>e.difference>1e5)).length>0,errorMessage:"This profile includes an IP range that is to wide (more than 100.000 IP addresses!). If you set an IP Range it should be not that large. You could split that range into multiple ones. The risk is that you include an IP that is not part of your company. Please review this setting.",badField:"ipRanges",applicable:[ce]},{id:33,description:"Login hours too large",formula:e=>e.loginHours.filter((e=>e.difference>1200)).length>0,errorMessage:"This profile includes a login hour that is to wide (more than 20 hours a day!). If you set a login hour it should reflect the reality. Please review this setting.",badField:"loginHours",applicable:[ce]},{id:34,description:"Inactive component",formula:e=>!1===e.isActive,errorMessage:"This component is inactive, so why do not you just remove it from your org?",badField:"isActive",applicable:[he,pe,q,Ee]},{id:35,description:"No active version for this flow",formula:e=>!1===e.isVersionActive,errorMessage:"This flow does not have an active version, did you forgot to activate its latest version? or you do not need that flow anymore?",badField:"isVersionActive",applicable:[K]},{id:36,description:"Too many versions under this flow",formula:e=>e.versionsCount>7,errorMessage:"This flow has more than seven versions. Maybe it is time to do some cleaning in this flow!",badField:"versionsCount",applicable:[K]},{id:37,description:"Migrate this process builder",formula:e=>"Workflow"===e.currentVersionRef?.type,errorMessage:"Time to migrate this process builder to flow!",badField:"name",applicable:[K]},{id:38,description:"No description for the current version of a flow",formula:e=>we(e.currentVersionRef?.description),errorMessage:"This flow's current version does not have a description. Best practices force you to use the Description field to give some informative context about why and how it is used/set/govern.",badField:"currentVersionRef.description",applicable:[K]},{id:39,description:"API Version too old for the current version of a flow",formula:e=>Ie(Te.CurrentApiVersion,e.currentVersionRef?.apiVersion),errorMessage:"The API version of this flow's current version is too old. Please update it to a newest version.",badField:"currentVersionRef.apiVersion",applicable:[K]},{id:40,description:"This flow is running without sharing",formula:e=>"SystemModeWithoutSharing"===e.currentVersionRef?.runningMode,errorMessage:"The running mode of this version without sharing. With great power comes great responsabilities. Please check if this is REALLY needed.",badField:"currentVersionRef.runningMode",applicable:[K]},{id:41,description:"Too many nodes in this version",formula:e=>e.currentVersionRef?.totalNodeCount>100,errorMessage:"There are more than one hundred of nodes in this flow. Please consider using Apex? or cut it into multiple sub flows?",badField:"currentVersionRef.totalNodeCount",applicable:[K]},{id:42,description:"Near the limit",formula:e=>e.usedPercentage>=.8,errorMessage:"This limit is almost reached (>80%). Please review this.",badField:"usedPercentage",applicable:[ae]},{id:43,description:"Almost all licenses are used",formula:e=>void 0!==e.usedPercentage&&e.usedPercentage>=.8,errorMessage:"The number of seats for this license is almost reached (>80%). Please review this.",badField:"usedPercentage",applicable:[ne]},{id:44,description:"You could have licenses to free up",formula:e=>e.remainingCount>0&&e.distinctActiveAssigneeCount!==e.usedCount,errorMessage:"The Used count from that permission set license does not match the number of disctinct active user assigned to the same license. Please check if you could free up some licenses!",badField:"distinctActiveAssigneeCount",applicable:[ne]},{id:45,description:"Role with a level >= 7",formula:e=>e.level>=7,errorMessage:"This role has a level in the Role Hierarchy which is seven or greater. Please reduce the maximum depth of the role hierarchy. Having that much levels has an impact on performance...",badField:"level",applicable:[ue]},{id:46,description:"Hard-coded URL suspicion in this item",formula:e=>e.nbHardCodedURLs>0,errorMessage:"The source code of this item contains one or more hard coded URLs pointing to domains like salesforce.com or force.*",badField:"nbHardCodedURLs",applicable:[O,q,Y,me,fe,Se]},{id:47,description:"Hard-coded Salesforce IDs suspicion in this item",formula:e=>e.nbHardCodedIDs>0,errorMessage:"The source code of this item contains one or more hard coded Salesforce IDs",badField:"nbHardCodedIDs",applicable:[O,q,Y,me,fe,Se]}],Re=new Map(Pe.map((e=>[e.id,e]))),Te={AllScoreRules:Pe,GetScoreRule:e=>Re.get(e),GetScoreRuleDescription:e=>Re.get(e).description,CurrentApiVersion:(()=>{const e=new Date,t=e.getFullYear(),s=e.getMonth()+1;return 3*(t-2022)+53+(s<=2?0:s<=6?1:s<=10?2:3)})()};Object.freeze(Te);class Ce extends S{static get label(){return"Application"}id;name;label;package}class ye extends S{static get label(){return"Application Permission from Profile or Permission Set"}parentId;parentRef;appId;appRef;isAccessible;isVisible}class be extends S{static get label(){return"Field Level Security from Profile or Permission Set"}parentId;parentRef;fieldApiName;isRead;isEdit}class Oe extends m{static get label(){return"Object Permissions from Profile or Permission Set"}parentId;parentRef;objectType;isRead;isCreate;isEdit;isDelete;isViewAll;isModifyAll}class Ae extends m{static get label(){return"SObject Releationship"}name;childObject;fieldName;isCascadeDelete;isRestrictedDelete}class Me extends S{static get label(){return"Organization"}id;name;type;isDeveloperEdition;isSandbox;isTrial;isProduction;localNamespace}class _e extends m{static get label(){return"Package"}id;name;namespace;type}class De extends m{static get label(){return"Page Layout"}id;name;type;url}class Le extends t{_compress;_decompress;_encode;_decode;_storageSetItem;_storageGetItem;_storageRemoveItem;_storageKey;_storageKeys;_storageLength;constructor(e){super(),this._compress=e.compress,this._decompress=e.decompress,this._encode=e.encode,this._decode=e.decode,this._storageSetItem=e.storage.setItem,this._storageGetItem=e.storage.getItem,this._storageRemoveItem=e.storage.removeItem,this._storageKey=e.storage.key,this._storageLength=e.storage.length,this._storageKeys=e.storage.keys}has(e){const t=ve(e),s=Ue(e),a=this._getEntryFromCache(t);if(null===a)this._storageRemoveItem(t),this._storageRemoveItem(s);else{let e=!1;for(let t=0;t<this._storageLength()&&!1===e;t++)this._storageKey(t)===s&&(e=!0);if(!1===e)return this._storageRemoveItem(t),!1}return null!==a}get(e){const t=ve(e),s=Ue(e),a=this._getEntryFromCache(t);if(null===a)return this._storageRemoveItem(t),this._storageRemoveItem(s),null;const r=this._getEntryFromCache(s);if(null===r)return this._storageRemoveItem(t),null;if(a.length=r.content.length,this._setItemToCache(t,JSON.stringify(a)),"map"!==a.type)return r.content;try{return new Map(r.content)}catch(e){return this._storageRemoveItem(t),this._storageRemoveItem(s),null}}set(e,t){const s=ve(e),a=Ue(e);if(null===t)this._storageRemoveItem(s),this._storageRemoveItem(a);else{const e=Date.now(),r=t instanceof Map?{type:"map",length:t.size,created:e}:{type:"array",length:t.length,created:e},i=t instanceof Map?{content:Array.from(t.entries().filter((([e])=>!1===e.endsWith("Ref")))),created:e}:{content:t,created:e};try{this._setItemToCache(a,JSON.stringify(i)),this._setItemToCache(s,JSON.stringify(r))}catch(e){this._storageRemoveItem(s),this._storageRemoveItem(a)}}}details(){return this._storageKeys().filter((e=>e.startsWith(Fe))).map((e=>{const t=this._getEntryFromCache(e),s=Ge(e);return t?{name:s,isEmpty:0===t.length,isMap:"map"===t.type,length:t.length,created:t.created}:{name:s,isEmpty:!0,isMap:!1,length:0,created:0}}))}remove(e){this._storageRemoveItem(Ue(e)),this._storageRemoveItem(ve(e))}clear(){return this._storageKeys().filter((e=>e.startsWith(Ne))).forEach((e=>this._storageRemoveItem(e)))}_setItemToCache=(e,t)=>{let s,a,r;try{s=this._encode(t),a=this._compress(s),r=We(a),this._storageSetItem(e,r)}catch(t){throw new Error(`Error occured when trying to save the value for key ${e} with: hexValue.length=${r?.length||"N/A"}, compressedValue.length=${a?.length||"N/A"}, encodedValue.length=${s?.length||"N/A"}. Initiale error message was ${t.message}`)}};_getEntryFromCache=e=>{let t=null;try{const s=this._storageGetItem(e);if(s){const e=ke(s),a=this._decompress(e);t=this._decode(a)}}catch(t){console.error(`Error occured when trying to get the value for key ${e}`,t)}if(!t)return null;try{const e=JSON.parse(t);return e.created&&Date.now()-e.created>$e?null:e}catch(e){return console.error(`Error occured when trying to parse the string: ${t}`,e),null}}}const Ne="OrgCheck",xe=`${Ne}.`,Fe=`${Ne}_`,Ue=e=>e.startsWith(xe)?e:xe+e,ve=e=>e.startsWith(Fe)?e:Fe+e,Ge=e=>e.startsWith(Fe)?e.substring(Fe.length):e.startsWith(xe)?e.substring(xe.length):e,$e=864e5,Be=["0","1","2","3","4","5","6","7","8","9","A","B","C","D","E","F"],Ve=new Array(256);for(let e=0;e<256;e++)Ve[e]=`${Be[e>>>4&15]}${Be[15&e]}`;const We=e=>{let t="";for(let s=0,a=e.length;s<a;s++)t+=Ve[e[s]];return t},ke=e=>{const t=[];for(let s=0;s<e.length;s+=2)t.push(parseInt(e.substring(s,s+2),16));return new Uint8Array(t)};class je extends M{async run(e,t,s,a){const r=a?.get("object");s?.log("Querying Tooling API about CustomField in the org...");const i=await e.soqlQuery([{tooling:!0,string:"SELECT Id, EntityDefinition.QualifiedApiName, EntityDefinition.IsCustomSetting FROM CustomField WHERE ManageableState IN ('installedEditable', 'unmanaged') AND (NOT(EntityDefinition.keyPrefix IN ('00a', '017', '02c', '0D5', '1CE'))) AND (NOT(EntityDefinition.QualifiedApiName like '%_hd')) "+(r?`AND EntityDefinition.QualifiedApiName = '${r}'`:"")}],s),n=t.getInstance(Y),o=i[0];s?.log(`Parsing ${o.length} custom fields...`);const c=new Map(await L.map(o,(t=>[e.caseSafeId(t.Id),{qualifiedApiName:t.EntityDefinition.QualifiedApiName,isCustomSetting:t.EntityDefinition.IsCustomSetting}]),(e=>!!e.EntityDefinition)));s?.log(`Retrieving dependencies of ${o.length} custom fields...`);const l=await e.dependenciesQuery(await L.map(o,(t=>e.caseSafeId(t.Id))),s);s?.log(`Calling Tooling API Composite to get more information about these ${c.size} custom fields...`);const d=await e.readMetadataAtScale("CustomField",Array.from(c.keys()),[],s);s?.log(`Parsing ${d.length} custom fields...`);const g=new Map(await L.map(d,(t=>{const s=e.caseSafeId(t.Id),a=c.get(s),r=n.create({properties:{id:s,name:t.DeveloperName,label:t.Metadata.label,package:t.NamespacePrefix||"",description:t.Description,isCustom:!0,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,objectId:a.qualifiedApiName,tooltip:t.InlineHelpText,type:t.Metadata.type,length:t.Metadata.length,isUnique:!0===t.Metadata.unique,isEncrypted:null!==t.Metadata.encryptionScheme&&"None"!==t.Metadata.encryptionScheme,isExternalId:!0===t.Metadata.externalId,isIndexed:!0===t.Metadata.unique||!0===t.Metadata.externalId,defaultValue:t.Metadata.defaultValue,isRestrictedPicklist:t.Metadata.valueSet&&!0===t.Metadata.valueSet.restricted,formula:t.Metadata.formula,url:e.setupUrl(s,U.CUSTOM_FIELD,a.qualifiedApiName,e.getObjectType(a.qualifiedApiName,a.isCustomSetting))},dependencies:{data:l}});if(r.formula){const e=p.RemoveComments(r.formula);r.nbHardCodedURLs=p.CountOfHardCodedURLs(e),r.nbHardCodedIDs=p.CountOfHardCodedIDs(e)}return n.computeScore(r),[r.id,r]})));return s?.log("Done"),g}}class He extends M{async run(e,t,s){s?.log("Querying Tooling API about ExternalString in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, Name, NamespacePrefix, Category, IsProtected, Language, MasterLabel, Value, CreatedDate, LastModifiedDate FROM ExternalString WHERE ManageableState IN ('installedEditable', 'unmanaged') "}],s),r=t.getInstance(J),i=a[0];s?.log(`Retrieving dependencies of ${i.length} custom labels...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} custom labels...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.createWithScore({properties:{id:s,name:t.Name,package:t.NamespacePrefix||"",category:t.Category,isProtected:!0===t.IsProtected,language:t.Language,label:t.MasterLabel,value:t.Value,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,url:e.setupUrl(s,U.CUSTOM_LABEL)},dependencies:{data:n}});return[a.id,a]})));return s?.log("Done"),o}}class Qe extends M{async run(e,t,s,a){const r=t.getInstance(Y),i=t.getInstance(X),n=t.getInstance(De),o=t.getInstance(ae),c=t.getInstance(he),l=t.getInstance(Se),d=t.getInstance(pe),g=t.getInstance(Ae),u=t.getInstance(Q),h=a?.get("object"),m=h.split("__"),f=3===m.length?m[0]:"",S=await Promise.all([e.describe(h,s),e.soqlQuery([{tooling:!0,string:`SELECT Id, DurableId, DeveloperName, Description, NamespacePrefix, ExternalSharingModel, InternalSharingModel, (SELECT DurableId, QualifiedApiName, Description, IsIndexed FROM Fields), (SELECT Id FROM ApexTriggers), (SELECT Id, MasterLabel, Description FROM FieldSets), (SELECT Id, Name, LayoutType FROM Layouts), (SELECT DurableId, Label, Max, Remaining, Type FROM Limits), (SELECT Id, Active, Description, ErrorDisplayField, ErrorMessage, ValidationName FROM ValidationRules), (SELECT Id, Name, Url, LinkType, OpenType, Description, CreatedDate, LastModifiedDate, NamespacePrefix FROM WebLinks) FROM EntityDefinition WHERE QualifiedApiName = '${h}' `+(f?`AND NamespacePrefix = '${f}' `:"")+"LIMIT 1"}],s),e.recordCount(h,s)]),E=S[0],I=e.getObjectType(E.name,E.customSetting),w=S[1][0][0];if(!w)throw new TypeError(`No entity definition record found for: ${h}`);const P=S[2],R=[],T=new Map;await L.forEach(w.Fields?.records,(t=>{if(t&&t.DurableId&&t.DurableId.split&&t.DurableId.includes){const s=e.caseSafeId(t.DurableId.split(".")[1]);t.DurableId?.includes(".00N")?R.push(s):T.set(t.QualifiedApiName,{id:s,description:t.Description,isIndexed:t.IsIndexed})}}));const C=await L.map(E.fields,(t=>{const s=T.get(t.name);return r.createWithScore({properties:{id:s.id,name:t.label,label:t.label,description:s.description,tooltip:t.inlineHelpText,type:t.type,length:t.length,isUnique:t.unique,isEncrypted:t.encrypted,isExternalId:t.externalId,isIndexed:s.isIndexed,defaultValue:t.defaultValue,formula:t.calculatedFormula,url:e.setupUrl(s.id,U.STANDARD_FIELD,w.DurableId,I)}})}),(e=>T.has(e.name))),y=await L.map(w.ApexTriggers?.records,(t=>e.caseSafeId(t.Id))),b=await L.map(w.FieldSets?.records,(t=>i.createWithScore({properties:{id:e.caseSafeId(t.Id),label:t.MasterLabel,description:t.Description,url:e.setupUrl(t.Id,U.FIELD_SET,w.DurableId)}}))),O=await L.map(w.Layouts?.records,(t=>n.createWithScore({properties:{id:e.caseSafeId(t.Id),name:t.Name,type:t.LayoutType,url:e.setupUrl(t.Id,U.PAGE_LAYOUT,w.DurableId)}}))),A=await L.map(w.Limits?.records,(t=>o.createWithScore({properties:{id:e.caseSafeId(t.DurableId),label:t.Label,max:t.Max,remaining:t.Remaining,used:t.Max-t.Remaining,usedPercentage:(t.Max-t.Remaining)/t.Max,type:t.Type}}))),M=await L.map(w.ValidationRules?.records,(t=>c.createWithScore({properties:{id:e.caseSafeId(t.Id),name:t.ValidationName,isActive:t.Active,description:t.Description,errorDisplayField:t.ErrorDisplayField,errorMessage:t.ErrorMessage,url:e.setupUrl(t.Id,U.VALIDATION_RULE)}}))),_=await L.map(w.WebLinks?.records,(t=>l.createWithScore({properties:{id:e.caseSafeId(t.Id),name:t.Name,nbHardCodedURLs:p.CountOfHardCodedURLs(t.Url),nbHardCodedIDs:p.CountOfHardCodedIDs(t.Url),type:t.LinkType,behavior:t.OpenType,package:t.NamespacePrefix,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,description:t.Description,url:e.setupUrl(t.Id,U.WEB_LINK,w.DurableId)}}))),D=await L.map(E.recordTypeInfos,(t=>d.createWithScore({properties:{id:e.caseSafeId(t.recordTypeId),name:t.name,developerName:t.developerName,isActive:t.active,isAvailable:t.available,isDefaultRecordTypeMapping:t.defaultRecordTypeMapping,isMaster:t.master,url:e.setupUrl(t.recordTypeId,U.RECORD_TYPE,w.DurableId)}}))),N=await L.map(E.childRelationships,(e=>g.createWithScore({properties:{name:e.relationshipName,childObject:e.childSObject,fieldName:e.field,isCascadeDelete:e.cascadeDelete,isRestrictedDelete:e.restrictedDelete}})),(e=>null!==e.relationshipName)),x=u.createWithScore({properties:{id:w.DurableId,label:E.label,labelPlural:E.labelPlural,isCustom:E.custom,isFeedEnabled:E.feedEnabled,isMostRecentEnabled:E.mruEnabled,isSearchable:E.searchable,keyPrefix:E.keyPrefix,name:w.DeveloperName,apiname:E.name,package:w.NamespacePrefix||"",typeId:I,description:w.Description,externalSharingModel:w.ExternalSharingModel,internalSharingModel:w.InternalSharingModel,apexTriggerIds:y,fieldSets:b,limits:A,layouts:O,validationRules:M,webLinks:_,standardFields:C,customFieldIds:R,recordTypes:D,relationships:N,recordCount:P,url:e.setupUrl(w.Id,I)}});return s?.log("Done"),x}}class qe extends M{async run(e,t,s){s?.log("Querying REST API about ObjectPermissions in the org...");const a=await e.soqlQuery([{string:"SELECT ParentId, Parent.IsOwnedByProfile, Parent.ProfileId, SobjectType, CreatedDate, LastModifiedDate,PermissionsRead, PermissionsCreate, PermissionsEdit, PermissionsDelete, PermissionsViewAllRecords, PermissionsModifyAllRecords FROM ObjectPermissions"}],s),r=t.getInstance(Oe),i=a[0];s?.log(`Parsing ${i.length} object permissions...`);const n=new Map(await L.map(i,(t=>{const s=r.create({properties:{parentId:e.caseSafeId(!0===t.Parent.IsOwnedByProfile?t.Parent.ProfileId:t.ParentId),objectType:t.SobjectType,isRead:t.PermissionsRead,isCreate:t.PermissionsCreate,isEdit:t.PermissionsEdit,isDelete:t.PermissionsDelete,isViewAll:t.PermissionsViewAllRecords,isModifyAll:t.PermissionsModifyAllRecords,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate}});return[`${s.parentId}_${s.objectType}`,s]}),(e=>null!==e.Parent)));return s?.log("Done"),n}}class Je extends M{async run(e,t,s){s?.log("Querying REST API about SetupEntityAccess for TabSet in the org...");const a=await e.soqlQuery([{string:"SELECT ApplicationId, IsAccessible, IsVisible FROM AppMenuItem WHERE Type = 'TabSet' "},{string:"SELECT SetupEntityId, ParentId, Parent.IsOwnedByProfile, Parent.ProfileId FROM SetupEntityAccess WHERE SetupEntityType = 'TabSet' "}],s),r=t.getInstance(ye),i=a[0],n=a[1];s?.log(`Parsing ${i.length} Application Menu Items...`);const o=new Map(await L.map(i,(t=>[e.caseSafeId(t.ApplicationId),{a:t.IsAccessible,v:t.IsVisible}])));s?.log(`Parsing ${n.length} Application Menu Items...`);const c=new Map(await L.map(n,(t=>{const s=e.caseSafeId(t.SetupEntityId),a=e.caseSafeId(t.Parent.IsOwnedByProfile?t.Parent.ProfileId:t.ParentId),i=o.get(s);return[`${s}-${a}`,r.create({properties:{appId:s,parentId:a,isAccessible:i.a,isVisible:i.v}})]}),(t=>o.has(e.caseSafeId(t.SetupEntityId)))));return s?.log("Done"),c}}class Ye extends M{async run(e,t,s){const a=t.getInstance(Q);s?.log("Performing a global describe and in parallel a SOQL query to EntityDefinition...");const r=await Promise.all([e.describeGlobal(s),e.soqlQuery([{string:"SELECT DurableId, NamespacePrefix, DeveloperName, QualifiedApiName, ExternalSharingModel, InternalSharingModel FROM EntityDefinition WHERE keyPrefix <> null AND DeveloperName <> null AND (NOT(keyPrefix IN ('00a', '017', '02c', '0D5', '1CE'))) AND (NOT(QualifiedApiName like '%_hd')) ",tooling:!0,queryMoreField:"DurableId"}],s)]),i=r[0],n=r[1][0],o={},c=await L.map(n,(e=>(o[e.QualifiedApiName]=e,e.QualifiedApiName)));s?.log(`Parsing ${i.length} objects...`);const l=new Map(await L.map(i,(t=>{const s=e.getObjectType(t.name,t.customSetting),r=o[t.name],i=a.create({properties:{id:t.name,label:t.label,name:r.DeveloperName,apiname:t.name,package:r.NamespacePrefix||"",typeId:s,externalSharingModel:r.ExternalSharingModel,internalSharingModel:r.InternalSharingModel,url:e.setupUrl(r.DurableId,s)}});return[i.id,i]}),(e=>!!c?.includes(e.name))));return s?.log("Done"),l}}const Xe=[{id:G,label:"Standard Object"},{id:$,label:"Custom Object"},{id:B,label:"External Object"},{id:V,label:"Custom Setting"},{id:W,label:"Custom Metadata Type"},{id:k,label:"Platform Event"},{id:j,label:"Knowledge Article"},{id:H,label:"Big Object"}];class Ke extends M{async run(e,t,s){const a=t.getInstance(v);return new Map(Xe.map((e=>[e.id,a.create({properties:{id:e.id,label:e.label}})])))}}const ze="Production",Ze="Developer Edition",et="Sandbox",tt="Trial";class st extends M{async run(e,t,s){s?.log("Querying REST API about Organization in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Name, IsSandbox, OrganizationType, TrialExpirationDate, NamespacePrefix FROM Organization LIMIT 1"}],s);s?.log(`Received result=${JSON.stringify(a)}`),s?.log("We need to get the first result and from there the first record...");const r=a[0][0];s?.log("Parsing the result...");const i=t.getInstance(Me);let n;n="Developer Edition"===r.OrganizationType?Ze:!0===r.IsSandbox?et:!1===r.IsSandbox&&r.TrialExpirationDate?tt:ze;const o=i.create({properties:{id:e.caseSafeId(r.Id),name:r.Name,type:n,isDeveloperEdition:n===Ze,isSandbox:n===et,isTrial:n===tt,isProduction:n===ze,localNamespace:r.NamespacePrefix||""}});return s?.log("Done"),o}}class at extends M{async run(e,t,s,a){const r=a?.get("permissions");s?.log("Querying REST API about UserPermissionAccess in the org...");const i=(await e.soqlQuery([{string:`SELECT ${r.map((e=>`Permissions${e}`)).join(", ")} FROM UserPermissionAccess LIMIT 1`}],s))[0][0];return s?.log("Parsing the results..."),new Map(await L.map(Object.keys(i),(e=>[e,i[e]]),(e=>e.startsWith("Permissions"))))}}class rt extends M{async run(e,t,s){s?.log("Querying Tooling API about InstalledSubscriberPackage and REST API about Organization in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, SubscriberPackage.NamespacePrefix, SubscriberPackage.Name FROM InstalledSubscriberPackage "},{string:"SELECT NamespacePrefix FROM Organization LIMIT 1 "}],s),r=t.getInstance(_e),i=a[0];s?.log(`Parsing ${i.length} installed packages...`);const n=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.SubscriberPackage.Name,namespace:t.SubscriberPackage.NamespacePrefix,type:"Installed"}});return[a.id,a]}))),o=a[1][0].NamespacePrefix;return o&&(s?.log(`Adding your local package ${o}...`),n.set(o,r.create({properties:{id:o,name:o,namespace:o,type:"Local"}}))),s?.log("Done"),n}}class it extends M{async run(e,t,s){s?.log("Querying REST API about PermissionSet, PermissionSetAssignment and PermissionSet (with a PermissionSetGroupId populated) in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Name, Description, IsCustom, License.Name, NamespacePrefix, Type, PermissionsApiEnabled, PermissionsViewSetup, PermissionsModifyAllData, PermissionsViewAllData, CreatedDate, LastModifiedDate FROM PermissionSet WHERE IsOwnedByProfile = FALSE ORDER BY Id LIMIT 2000"},{byPasses:["INVALID_TYPE"],string:"SELECT Id, PermissionSetGroupId, PermissionSetGroup.Description FROM PermissionSet WHERE PermissionSetGroupId != null ORDER BY Id LIMIT 2000"},{string:"SELECT ParentId, COUNT(SobjectType) CountObject FROM ObjectPermissions WHERE Parent.IsOwnedByProfile = FALSE GROUP BY ParentId ORDER BY ParentId LIMIT 2000"},{string:"SELECT ParentId, COUNT(Field) CountField FROM FieldPermissions WHERE Parent.IsOwnedByProfile = FALSE GROUP BY ParentId ORDER BY ParentId LIMIT 2000"},{string:"SELECT PermissionSetId, COUNT(Id) CountAssignment FROM PermissionSetAssignment WHERE PermissionSet.IsOwnedByProfile = FALSE GROUP BY PermissionSetId ORDER BY PermissionSetId LIMIT 2000"}],s),r=a[0],i=a[1],n=a[2],o=a[3],c=a[4],l=t.getInstance(ie);s?.log(`Parsing ${r.length} permission sets...`);const d=new Map(await L.map(r,(t=>{const s=e.caseSafeId(t.Id),a="Group"===t.Type,r=l.create({properties:{id:s,name:t.Name,description:t.Description,license:t.License?t.License.Name:"",isCustom:t.IsCustom,package:t.NamespacePrefix||"",memberCounts:0,isGroup:a,type:a?"Permission Set Group":"Permission Set",createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,nbFieldPermissions:0,nbObjectPermissions:0,importantPermissions:{apiEnabled:!0===t.PermissionsApiEnabled,viewSetup:!0===t.PermissionsViewSetup,modifyAllData:!0===t.PermissionsModifyAllData,viewAllData:!0===t.PermissionsViewAllData},url:!1===a?e.setupUrl(s,U.PERMISSION_SET):""}});return[r.id,r]})));return s?.log(`Parsing ${i.length} permission set groups, ${n.length} object permissions and ${o.length} field permissions...`),await Promise.all([L.forEach(i,(t=>{const s=e.caseSafeId(t.Id),a=e.caseSafeId(t.PermissionSetGroupId);if(d.has(s)){const t=d.get(s);t.isGroup=!0,t.groupId=a,t.url=e.setupUrl(a,U.PERMISSION_SET_GROUP)}})),L.forEach(n,(t=>{const s=e.caseSafeId(t.ParentId);if(d.has(s)){d.get(s).nbObjectPermissions=t.CountObject}})),L.forEach(o,(t=>{const s=e.caseSafeId(t.ParentId);if(d.has(s)){d.get(s).nbFieldPermissions=t.CountField}})),L.forEach(c,(t=>{const s=e.caseSafeId(t.PermissionSetId);if(d.has(s)){d.get(s).memberCounts=t.CountAssignment}}))]),s?.log(`Computing the score for ${d.size} permission sets...`),await L.forEach(d,(e=>{l.computeScore(e)})),s?.log("Done"),d}}class nt extends M{async run(e,t,s){s?.log("Querying REST API about PermissionSet with IsOwnedByProfile=true in the org...");const a=await e.soqlQuery([{string:"SELECT ProfileId, Profile.Name, Profile.Description, IsCustom, License.Name, NamespacePrefix, PermissionsApiEnabled, PermissionsViewSetup, PermissionsModifyAllData, PermissionsViewAllData, CreatedDate, LastModifiedDate FROM PermissionSet WHERE isOwnedByProfile = TRUE ORDER BY ProfileId LIMIT 2000"},{string:"SELECT Parent.ProfileId, COUNT(SobjectType) CountObject FROM ObjectPermissions WHERE Parent.IsOwnedByProfile = TRUE GROUP BY Parent.ProfileId ORDER BY Parent.ProfileId LIMIT 2000"},{string:"SELECT Parent.ProfileId, COUNT(Field) CountField FROM FieldPermissions WHERE Parent.IsOwnedByProfile = TRUE GROUP BY Parent.ProfileId ORDER BY Parent.ProfileId LIMIT 2000"},{string:"SELECT PermissionSet.ProfileId, COUNT(Id) CountAssignment FROM PermissionSetAssignment WHERE PermissionSet.IsOwnedByProfile = TRUE GROUP BY PermissionSet.ProfileId ORDER BY PermissionSet.ProfileId LIMIT 2000"}],s),r=a[0],i=a[1],n=a[2],o=a[3],c=t.getInstance(re);s?.log(`Parsing ${r.length} profiles...`);const l=new Map(await L.map(r,(t=>{const s=e.caseSafeId(t.ProfileId),a=c.create({properties:{id:s,name:t.Profile.Name,description:t.Profile.Description,license:t.License?t.License.Name:"",isCustom:t.IsCustom,package:t.NamespacePrefix||"",memberCounts:0,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,nbFieldPermissions:0,nbObjectPermissions:0,type:"Profile",importantPermissions:{apiEnabled:!0===t.PermissionsApiEnabled,viewSetup:!0===t.PermissionsViewSetup,modifyAllData:!0===t.PermissionsModifyAllData,viewAllData:!0===t.PermissionsViewAllData},url:e.setupUrl(s,U.PROFILE)}});return[a.id,a]})));return s?.log(`Parsing ${i.length} object permissions, ${n.length} field permissions and ${o.length} assignments...`),await Promise.all([L.forEach(i,(t=>{const a=e.caseSafeId(t.ProfileId);if(l.has(a)){l.get(a).nbObjectPermissions=t.CountObject}else s.log(`[objectPermissionRecords] Not Profile found with ID: ${a}, and we had Record=${JSON.stringify(t)}`)})),L.forEach(n,(t=>{const a=e.caseSafeId(t.ProfileId);if(l.has(a)){l.get(a).nbFieldPermissions=t.CountField}else s.log(`[fieldPermissionRecords] Not Profile found with ID: ${a}, and we had Record=${JSON.stringify(t)}`)})),L.forEach(o,(t=>{const a=e.caseSafeId(t.ProfileId);if(l.has(a)){l.get(a).memberCounts=t.CountAssignment}else s.log(`[assignmentRecords] Not Profile found with ID: ${a}, and we had Record=${JSON.stringify(t)}`)}))]),s?.log(`Computing the score for ${l.size} profiles...`),await L.forEach(l,(e=>{c.computeScore(e)})),s?.log("Done"),l}}const ot=e=>e?.split(".").reduce(((e,t,s,a)=>e+Number(t)*Math.pow(255,a.length-1-s)),0),ct=["monday","tuesday","wednesday","thursday","friday","saturday","sunday"];class lt extends M{async run(e,t,s){s?.log("Querying REST API about Profile in the org...");const a=(await e.soqlQuery([{string:"SELECT Id FROM Profile"}],s))[0];s?.log(`Parsing ${a.length} Profiles...`);const r=await L.map(a,(e=>e.Id)),i=t.getInstance(ce),n=t.getInstance(le),o=t.getInstance(de);s?.log(`Calling Tooling API Composite to get more information about these ${r.length} profiles...`);const c=await e.readMetadataAtScale("Profile",r,["UNKNOWN_EXCEPTION"],s);s?.log(`Parsing ${c.length} profile restrictions...`);const l=new Map(await L.map(c,(async t=>{const s=e.caseSafeId(t.Id);let a,r;a=t.Metadata.loginHours?await L.map(ct,(e=>{const s=t.Metadata.loginHours[e+"Start"],a=t.Metadata.loginHours[e+"End"];return o.create({properties:{day:e,fromTime:("0"+Math.floor(s/60)).slice(-2)+":"+("0"+s%60).slice(-2),toTime:("0"+Math.floor(a/60)).slice(-2)+":"+("0"+a%60).slice(-2),difference:a-s}})})):[],r=t.Metadata.loginIpRanges&&t.Metadata.loginIpRanges.length>0?await L.map(t.Metadata.loginIpRanges,(e=>{const t=ot(e.startAddress),s=ot(e.endAddress);return n.create({properties:{startAddress:e.startAddress,endAddress:e.endAddress,description:e.description||"(empty)",difference:s-t+1}})})):[];const c=i.createWithScore({properties:{profileId:s,ipRanges:r,loginHours:a}});return[c.profileId,c]})));return s?.log("Done"),l}}class dt extends M{async run(e,t,s){s?.log("Querying Metadata API about ProfilePasswordPolicy...");const a=await e.readMetadata([{type:"ProfilePasswordPolicy",members:["*"]}],s),r=a?.get("ProfilePasswordPolicy")||[];if(!r)return new Map;const i=t.getInstance(oe);s?.log(`Parsing ${r.length} profile password policies...`);const n=new Map(await L.map(r,(e=>{const t=i.createWithScore({properties:{forgotPasswordRedirect:"true"===e.forgotPasswordRedirect,lockoutInterval:parseInt(e.lockoutInterval,10),maxLoginAttempts:parseInt(e.maxLoginAttempts,10),minimumPasswordLength:parseInt(e.minimumPasswordLength,10),minimumPasswordLifetime:"true"===e.minimumPasswordLifetime,obscure:"true"===e.obscure,passwordComplexity:parseInt(e.passwordComplexity,10),passwordExpiration:parseInt(e.passwordExpiration,10),passwordHistory:parseInt(e.passwordHistory,10),passwordQuestion:"1"===e.passwordQuestion,profileName:e.profile}});return[t.profileName,t]}),(e=>"string"==typeof e.profile&&""!==e.profile)));return s?.log("Done"),n}}class pt extends M{async run(e,t,s){s?.log("Querying REST API about internal active User in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Name, SmallPhotoUrl, ProfileId, LastLoginDate, LastPasswordChangeDate, NumberOfFailedLogins, UserPreferencesLightningExperiencePreferred, (SELECT PermissionSetId FROM PermissionSetAssignments WHERE PermissionSet.IsOwnedByProfile = false) FROM User WHERE IsActive = true AND ContactId = NULL AND Profile.Id != NULL "}],s),r=t.getInstance(ge),i=a[0];s?.log(`Parsing ${i.length} users...`);const n=new Map(await L.map(i,(async t=>{const s=e.caseSafeId(t.Id),a=await L.map(t?.PermissionSetAssignments?.records,(t=>e.caseSafeId(t.PermissionSetId))),i=r.createWithScore({properties:{id:s,photoUrl:t.SmallPhotoUrl,name:t.Name,lastLogin:t.LastLoginDate,numberFailedLogins:t.NumberOfFailedLogins,onLightningExperience:t.UserPreferencesLightningExperiencePreferred,lastPasswordChange:t.LastPasswordChangeDate,profileId:e.caseSafeId(t.ProfileId),permissionSetIds:a,url:e.setupUrl(s,U.USER)}});return[i.id,i]})));return s?.log("Done"),n}}class gt extends M{async run(e,t,s){s?.log("Querying Tooling API about ApexPage in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, Name, ApiVersion, NamespacePrefix, Description, IsAvailableInTouch, Markup, CreatedDate, LastModifiedDate FROM ApexPage WHERE ManageableState IN ('installedEditable', 'unmanaged')"}],s),r=t.getInstance(fe),i=a[0];s?.log(`Retrieving dependencies of ${i.length} visualforce pages...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} visualforce pages...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.Name,apiVersion:t.ApiVersion,isMobileReady:t.IsAvailableInTouch,package:t.NamespacePrefix||"",createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,description:t.Description,url:e.setupUrl(s,U.VISUAL_FORCE_PAGE)},dependencies:{data:n}});if(t.Markup){const e=p.RemoveComments(t.Markup);a.nbHardCodedURLs=p.CountOfHardCodedURLs(e),a.nbHardCodedIDs=p.CountOfHardCodedIDs(e)}return r.computeScore(a),[a.id,a]})));return s?.log("Done"),o}}class ut extends M{async run(e,t,s){s?.log("Querying Tooling API about ApexComponent in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, Name, ApiVersion, NamespacePrefix, Description, Markup, CreatedDate, LastModifiedDate FROM ApexComponent WHERE ManageableState IN ('installedEditable', 'unmanaged') "}],s),r=t.getInstance(me),i=a[0];s?.log(`Retrieving dependencies of ${i.length} visualforce components...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} visualforce components...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.Name,apiVersion:t.ApiVersion,package:t.NamespacePrefix||"",createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,description:t.Description,url:e.setupUrl(s,U.VISUAL_FORCE_COMPONENT)},dependencies:{data:n}});if(t.Markup){const e=p.RemoveComments(t.Markup);a.nbHardCodedURLs=p.CountOfHardCodedURLs(e),a.nbHardCodedIDs=p.CountOfHardCodedIDs(e)}return r.computeScore(a),[a.id,a]})));return s?.log("Done"),o}}class ht extends M{async run(e,t,s){s?.log("Querying Tooling API about AuraDefinitionBundle in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, MasterLabel, ApiVersion, NamespacePrefix, Description, CreatedDate, LastModifiedDate FROM AuraDefinitionBundle WHERE ManageableState IN ('installedEditable', 'unmanaged') "}],s),r=t.getInstance(ee),i=a[0];s?.log(`Retrieving dependencies of ${i.length} lightning aura components...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} lightning aura components...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.createWithScore({properties:{id:s,name:t.MasterLabel,apiVersion:t.ApiVersion,package:t.NamespacePrefix||"",createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,description:t.Description,url:e.setupUrl(s,U.AURA_WEB_COMPONENT)},dependencies:{data:n}});return[a.id,a]})));return s?.log("Done"),o}}class mt extends M{async run(e,t,s){s?.log("Querying Tooling API about LightningComponentBundle in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, MasterLabel, ApiVersion, NamespacePrefix, Description, CreatedDate, LastModifiedDate FROM LightningComponentBundle WHERE ManageableState IN ('installedEditable', 'unmanaged') "}],s),r=t.getInstance(se),i=a[0];s?.log(`Retrieving dependencies of ${i.length} lightning web components...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} lightning web components...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.createWithScore({properties:{id:s,name:t.MasterLabel,apiVersion:t.ApiVersion,package:t.NamespacePrefix||"",createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,description:t.Description,url:e.setupUrl(s,U.LIGHTNING_WEB_COMPONENT)},dependencies:{data:n}});return[a.id,a]})));return s?.log("Done"),o}}class ft extends M{async run(e,t,s){s?.log("Querying Tooling API about FlexiPage in the org...");const a=await e.soqlQuery([{tooling:!0,string:"SELECT Id, MasterLabel, EntityDefinition.QualifiedApiName, Type, NamespacePrefix, Description, CreatedDate, LastModifiedDate FROM FlexiPage WHERE ManageableState IN ('installedEditable', 'unmanaged') "}],s),r=t.getInstance(te),i=a[0];s?.log(`Retrieving dependencies of ${i.length} lightning pages...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} lightning pages...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.createWithScore({properties:{id:s,name:t.MasterLabel,type:t.Type,package:t.NamespacePrefix||"",createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,description:t.Description,objectId:t.EntityDefinition?.QualifiedApiName||"",url:e.setupUrl(s,U.LIGHTNING_PAGE)},dependencies:{data:n}});return[a.id,a]})));return s?.log("Done"),o}}class St extends M{async run(e,t,s){s?.log("Querying REST API about Group in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Name, DeveloperName, DoesIncludeBosses, Type, RelatedId, Related.Name, (SELECT UserOrGroupId From GroupMembers)FROM Group "}],s),r=t.getInstance(Z),i=a[0];s?.log(`Parsing ${i.length} groups...`);const n=new Map(await L.map(i,(async t=>{const s=e.caseSafeId(t.Id);let a,i,n,o,c,l;switch(t.Type){case"Regular":case"Queue":a="Regular"===t.Type?U.PUBLIC_GROUP:U.QUEUE,i=t.Name,n=t.DeveloperName,o=t.DoesIncludeBosses;break;case"Role":case"RoleAndSubordinates":case"RoleAndSubordinatesInternal":a=U.ROLE,i=t.Related.Name,c="Role"!==t.Type,l=e.caseSafeId(t.RelatedId);break;default:i=t.Type,a=U.TECHNICAL_GROUP}const d=[],p=[];t.GroupMembers&&t.GroupMembers.records&&t.GroupMembers.records.length>0&&await L.forEach(t.GroupMembers.records,(t=>{const s=e.caseSafeId(t.UserOrGroupId);(s.startsWith("005")?d:p).push(s)}));const g=r.createWithScore({properties:{id:s,name:i,developerName:n,type:a,isPublicGroup:"Regular"===t.Type,isQueue:"Queue"===t.Type,nbDirectMembers:d.length+p.length,directUserIds:d,directGroupIds:p,includeBosses:!0===o,includeSubordinates:!0===c,relatedId:l,url:e.setupUrl(l??s,a)}});return[g.id,g]})));return s?.log("Done"),n}}class Et extends M{async run(e,t,s){s?.log("Querying Tooling API about ApexClass, ApexCodeCoverage, ApexCodeCoverageAggregate and AsyncApexJob in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Name, ApiVersion, NamespacePrefix, Body, LengthWithoutComments, SymbolTable, CreatedDate, LastModifiedDate FROM ApexClass WHERE ManageableState IN ('installedEditable', 'unmanaged') ",tooling:!0},{string:"SELECT ApexClassOrTriggerId, ApexTestClassId FROM ApexCodeCoverage",tooling:!0},{string:"SELECT ApexClassorTriggerId, NumLinesCovered, NumLinesUncovered, Coverage FROM ApexCodeCoverageAggregate",tooling:!0},{string:"SELECT ApexClassId FROM AsyncApexJob WHERE JobType = 'ScheduledApex' "},{string:"SELECT id, ApexClassId, MethodName, ApexTestRunResult.CreatedDate, RunTime, Outcome, StackTrace FROM ApexTestResult WHERE ApexTestRunResult.Status = 'Completed' AND ApexClass.ManageableState IN ('installedEditable', 'unmanaged') ORDER BY ApexClassId, ApexTestRunResult.CreatedDate desc, MethodName ",tooling:!0}],s),r=t.getInstance(O),i=t.getInstance(b),n=a[0],o=a[1],c=a[2],l=a[3],d=a[4];s?.log(`Retrieving dependencies of ${n.length} apex classes...`);const g=await e.dependenciesQuery(await L.map(n,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${n.length} apex classes...`);const u=new Map(await L.map(n,(async t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.Name,apiVersion:t.ApiVersion,package:t.NamespacePrefix||"",isTest:!1,isAbstract:!1,isClass:!0,isEnum:!1,isInterface:!1,isSchedulable:!1,isScheduled:!1,length:t.LengthWithoutComments,sourceCode:t.Body,needsRecompilation:!t.SymbolTable,coverage:0,relatedTestClasses:[],relatedClasses:[],createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,url:e.setupUrl(s,U.APEX_CLASS)},dependencies:{data:g}});if(t.SymbolTable&&(a.innerClassesCount=t.SymbolTable.innerClasses?.length||0,a.interfaces=t.SymbolTable.interfaces,a.isSchedulable=t.SymbolTable.interfaces?.includes("System.Schedulable")??!1,a.methodsCount=t.SymbolTable.methods?.length||0,a.extends=t.SymbolTable.parentClass,t.SymbolTable.tableDeclaration&&(a.annotations=t.SymbolTable.tableDeclaration.annotations?.map((e=>e?.name??e)),await L.forEach(t.SymbolTable.tableDeclaration.modifiers,(e=>{switch(e){case"with sharing":a.specifiedSharing="with";break;case"without sharing":a.specifiedSharing="without";break;case"inherited sharing":a.specifiedSharing="inherited";break;case"public":a.specifiedAccess="public";break;case"private":a.specifiedAccess="private";break;case"global":a.specifiedAccess="global";break;case"virtual":a.specifiedAccess="virtual";break;case"abstract":a.isAbstract=!0;break;case"testMethod":a.isTest=!0;break;default:console.error(`Unsupported modifier in SymbolTable.tableDeclaration: ${e} (ApexClassId=${a.id})`)}})))),t.Body){const e=p.RemoveComments(t.Body);a.isInterface=p.IsInterface(e),a.isEnum=p.IsEnum(e),a.isClass=!1===a.isInterface&&!1===a.isEnum,a.nbHardCodedURLs=p.CountOfHardCodedURLs(e),a.nbHardCodedIDs=p.CountOfHardCodedIDs(e),!0===a.isTest&&(a.isTestSeeAllData=p.IsTestSeeAllData(e),a.nbSystemAsserts=p.CountOfAsserts(e))}return!0!==a.isEnum&&!0!==a.isInterface||(a.specifiedSharing="Not applicable"),[a.id,a]})));s?.log(`Parsing ${o.length} apex code coverages...`);const h=new Map,m=new Map;return await L.forEach(o,(t=>{const s=e.caseSafeId(t.ApexClassOrTriggerId),a=e.caseSafeId(t.ApexTestClassId);u.has(s)&&(!1===h.has(s)&&h.set(s,new Set),!1===m.has(a)&&m.set(a,new Set),h.get(s).add(a),m.get(a).add(s))})),await L.forEach(h,((e,t)=>{u.has(t)&&(u.get(t).relatedTestClassIds=Array.from(e))})),await L.forEach(m,((e,t)=>{u.has(t)&&(u.get(t).relatedClassIds=Array.from(e))})),s?.log(`Parsing ${c.length} apex code coverage aggregates...`),await L.forEach(c,(t=>{const s=e.caseSafeId(t.ApexClassOrTriggerId);u.has(s)&&(u.get(s).coverage=t.NumLinesCovered/(t.NumLinesCovered+t.NumLinesUncovered))})),s?.log(`Parsing ${l.length} schedule apex classes...`),await L.forEach(l,(t=>{const s=e.caseSafeId(t.ApexClassId);u.has(s)&&(u.get(s).isScheduled=!0)})),s?.log(`Parsing ${d.length} test results...`),await L.forEach(d,(t=>{const s=e.caseSafeId(t.ApexClassId);if(u.has(s)){const e=u.get(s);if(!0===e.isTest&&(e.lastTestRunDate||(e.lastTestRunDate=t.ApexTestRunResult?.CreatedDate,e.testMethodsRunTime=0,e.testPassedMethods=[],e.testFailedMethods=[]),e.lastTestRunDate===t.ApexTestRunResult?.CreatedDate)){const s=i.create({properties:{methodName:t.MethodName,isSuccessful:"Pass"===t.Outcome,runtime:t.RunTime,stacktrace:t.StackTrace}});e.testMethodsRunTime+=s.runtime,(s.isSuccessful?e.testPassedMethods:e.testFailedMethods).push(s)}}})),await L.forEach(u,(e=>{r.computeScore(e)})),s?.log("Done"),u}}class It extends M{async run(e,t,s){s?.log("Querying Tooling API about ApexTrigger in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Name, ApiVersion, Status, NamespacePrefix, Body, UsageBeforeInsert, UsageAfterInsert, UsageBeforeUpdate, UsageAfterUpdate, UsageBeforeDelete, UsageAfterDelete, UsageAfterUndelete, UsageIsBulk, LengthWithoutComments, EntityDefinition.QualifiedApiName, CreatedDate, LastModifiedDate FROM ApexTrigger WHERE ManageableState IN ('installedEditable', 'unmanaged') ",tooling:!0}],s),r=t.getInstance(q),i=a[0];s?.log(`Retrieving dependencies of ${i.length} apex triggers...`);const n=await e.dependenciesQuery(await L.map(i,(t=>e.caseSafeId(t.Id))),s);s?.log(`Parsing ${i.length} apex triggers...`);const o=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.Name,apiVersion:t.ApiVersion,package:t.NamespacePrefix||"",length:t.LengthWithoutComments,isActive:"Active"===t.Status,beforeInsert:t.UsageBeforeInsert,afterInsert:t.UsageAfterInsert,beforeUpdate:t.UsageBeforeUpdate,afterUpdate:t.UsageAfterUpdate,beforeDelete:t.UsageBeforeDelete,afterDelete:t.UsageAfterDelete,afterUndelete:t.UsageAfterUndelete,objectId:e.caseSafeId(t.EntityDefinition?.QualifiedApiName),hasSOQL:!1,hasDML:!1,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,url:e.setupUrl(s,U.APEX_TRIGGER,t.EntityDefinition?.QualifiedApiName)},dependencies:{data:n}});if(t.Body){const e=p.RemoveComments(t.Body);a.hasSOQL=p.HasSOQL(e),a.hasDML=p.HasDML(e),a.nbHardCodedURLs=p.CountOfHardCodedURLs(e),a.nbHardCodedIDs=p.CountOfHardCodedIDs(e)}return r.computeScore(a),[a.id,a]}),(e=>!!e.EntityDefinition)));return s?.log("Done"),o}}class wt extends M{async run(e,t,s){s?.log("Querying REST API about UserRole in the org...");const a=await e.soqlQuery([{string:"SELECT Id, DeveloperName, Name, ParentRoleId, (SELECT Id FROM Users WHERE IsActive = true AND ContactId = NULL AND Profile.Id != NULL) FROM UserRole WHERE PortalType = 'None' "}],s),r=t.getInstance(ue),i=a[0];s?.log(`Parsing ${i.length} user roles...`);const n=new Map,o=[],c=new Map(await L.map(i,(async t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.Name,apiname:t.DeveloperName,parentId:t.ParentRoleId?e.caseSafeId(t.ParentRoleId):void 0,hasParent:!!t.ParentRoleId,activeMembersCount:0,activeMemberIds:[],hasActiveMembers:!1,url:e.setupUrl(s,U.ROLE)}});return!1===a.hasParent?o.push(a):(!1===n.has(a.parentId)&&n.set(a.parentId,[]),n.get(a.parentId).push(a)),await L.forEach(t?.Users?.records,(t=>{a.activeMemberIds.push(e.caseSafeId(t.Id))})),a.activeMembersCount=a.activeMemberIds.length,a.hasActiveMembers=a.activeMemberIds.length>0,[a.id,a]})));return await L.forEach(o,(async e=>{e.level=1,Pt(e,n)})),await L.forEach(c,(async e=>{r.computeScore(e)})),s?.log("Done"),c}}const Pt=(e,t)=>{const s=t.get(e.id);s?.forEach((s=>{s.level=e.level+1,Pt(s,t)}))};class Rt extends M{async run(e,t,s){s?.log("Querying Tooling API about FlowDefinition in the org...");const a=await e.soqlQuery([{string:"SELECT Id, MasterLabel, DeveloperName, ApiVersion, Description, ActiveVersionId, LatestVersionId, CreatedDate, LastModifiedDate FROM FlowDefinition",tooling:!0},{string:"SELECT Id, DefinitionId, Status, ProcessType FROM Flow where DefinitionId <> null",tooling:!0}],s),r=t.getInstance(K),i=t.getInstance(z),n=a[0],o=a[1];s?.log(`Retrieving dependencies of ${n.length} flow versions...`);const c=await e.dependenciesQuery(await L.map(n,(t=>e.caseSafeId(t.ActiveVersionId??t.LatestVersionId))),s),l=[];s?.log(`Parsing ${n.length} flow definitions...`);const d=new Map(await L.map(n,(t=>{const s=e.caseSafeId(t.Id),a=e.caseSafeId(t.ActiveVersionId),i=e.caseSafeId(t.LatestVersionId),n=r.create({properties:{id:s,name:t.DeveloperName,apiVersion:t.ApiVersion,currentVersionId:a??i,isLatestCurrentVersion:a===i,isVersionActive:!!a,versionsCount:0,description:t.Description,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,url:e.setupUrl(s,U.FLOW_DEFINITION)},dependencies:{data:c,idField:"currentVersionId"}});return l.push(n.currentVersionId),[n.id,n]})));s?.log(`Parsing ${o.length} flow versions...`),await L.forEach(o,(t=>{const s=e.caseSafeId(t.DefinitionId),a=d.get(s);a.versionsCount++,a.type=t.ProcessType})),s?.log(`Calling Tooling API Composite to get more information about these ${l.length} flow versions...`);const p=await e.readMetadataAtScale("Flow",l,["UNKNOWN_EXCEPTION"],s);return s?.log(`Parsing ${p.length} flow versions...`),await L.forEach(p,(async t=>{const s=e.caseSafeId(t.Id),a=e.caseSafeId(t.DefinitionId),r=i.create({properties:{id:s,name:t.FullName,version:t.VersionNumber,apiVersion:t.ApiVersion,totalNodeCount:["actionCalls","apexPluginCalls","assignments","collectionProcessors","decisions","loops","orchestratedStages","recordCreates","recordDeletes","recordLookups","recordRollbacks","recordUpdates","screens","steps","waits"].reduce(((e,s)=>e+t.Metadata[s]?.length||0),0),dmlCreateNodeCount:t.Metadata.recordCreates?.length||0,dmlDeleteNodeCount:t.Metadata.recordDeletes?.length||0,dmlUpdateNodeCount:t.Metadata.recordUpdates?.length||0,screenNodeCount:t.Metadata.screens?.length||0,isActive:"Active"===t.Status,description:t.Description,type:t.ProcessType,runningMode:t.RunInMode,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,url:e.setupUrl(s,U.FLOW_VERSION)}});await L.forEach(t.Metadata.processMetadataValues,(e=>{"ObjectType"===e.name&&(r.sobject=e.value.stringValue),"TriggerType"===e.name&&(r.triggerType=e.value.stringValue)}));d.get(a).currentVersionRef=r})),await L.forEach(d,(e=>r.computeScore(e))),s?.log("Done"),d}}class Tt extends M{async run(e,t,s){s?.log("Querying Tooling API about WorkflowRule in the org...");const a=(await e.soqlQuery([{string:"SELECT Id FROM WorkflowRule",tooling:!0}],s))[0];s?.log(`Parsing ${a.length} Workflow Rules...`);const r=await L.map(a,(e=>e.Id)),i=t.getInstance(Ee);s?.log(`Calling Tooling API Composite to get more information about these ${r.length} workflow rules...`);const n=await e.readMetadataAtScale("WorkflowRule",r,["UNKNOWN_EXCEPTION"],s);s?.log(`Parsing ${n.length} workflows...`);const o=new Map(await L.map(n,(async t=>{const s=e.caseSafeId(t.Id),a=i.create({properties:{id:s,name:t.FullName,description:t.Metadata.description,isActive:t.Metadata.active,createdDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,hasAction:!0,futureActions:[],emptyTimeTriggers:[],url:e.setupUrl(s,U.WORKFLOW_RULE)}}),r=t.Metadata.actions;a.actions=await L.map(r,(e=>({name:e.name,type:e.type})));const n=t.Metadata.workflowTimeTriggers;return await L.forEach(n,(async e=>{const t=e.offsetFromField||"TriggerDate";0===e.actions.length?a.emptyTimeTriggers.push({field:t,delay:`${e.timeLength} ${e.workflowTimeTriggerUnit}`}):await L.forEach(e.actions,(s=>{a.futureActions.push({name:s.name,type:s.type,field:t,delay:`${e.timeLength} ${e.workflowTimeTriggerUnit}`})}))})),a.hasAction=a.actions.length+a.futureActions.length>0,i.computeScore(a),[a.id,a]})));return s?.log("Done"),o}}const Ct=(e,t)=>Object.prototype.isPrototypeOf.call(t,e);class yt extends E{_instances;constructor(){super(),this._instances=new Map}getInstance(e){const t=Ct(e,m),s=Ct(e,f),a=Ct(e,S);if(!1===t&&!1===a&&!1===s)throw new TypeError("Given dataClass does not extends Data nor DataWithDependencies nor DataWithoutScoring");return!1===this._instances.has(e)&&this._instances.set(e,new bt(e,t?Te.AllScoreRules.filter((t=>t.applicable?.includes(e))):[],s)),this._instances.get(e)}}class bt extends I{_dataClass;_scoreRules;_isDependenciesNeeded;constructor(e,t,s){super(),this._dataClass=e,this._scoreRules=t,this._isDependenciesNeeded=s}create(e){if(!e)throw new TypeError("Configuration can't be null.");if(!e.properties)throw new TypeError("Configuration.properties can't be null.");const t=new this._dataClass;return Object.keys(t).forEach((s=>{t[s]=e.properties[s]})),Object.seal(t),this._scoreRules.length>0&&(t.score=0,t.badFields=[],t.badReasonIds=[]),!0===this._isDependenciesNeeded&&e.dependencies&&(t.dependencies=g.create(e.dependencies.data,t[e.dependencies.idField||"id"])),t}computeScore(e){return this._scoreRules.filter((t=>{try{if(!0===t.formula(e))return!0}catch(t){console.error("COMPUTE SCORE",t,e)}return!1})).forEach((t=>{e.score++,e.badFields.push(t.badField),e.badReasonIds.push(t.id)})),e}createWithScore(e){return this.computeScore(this.create(e))}}class Ot extends M{async run(e,t,s){s?.log("Querying REST API about Applications (tab set typed) in the org...");const a=await e.soqlQuery([{string:"SELECT ApplicationId, Name, Label, NamespacePrefix FROM AppMenuItem WHERE Type = 'TabSet' "}],s),r=t.getInstance(Ce),i=a[0];s?.log(`Parsing ${i.length} applications...`);const n=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.ApplicationId);return[s,r.create({properties:{id:s,name:t.Name,label:t.Label,package:t.NamespacePrefix||""}})]})));return s?.log("Done"),n}}class At extends M{async run(e,t,s,a){const r=a?.get("object");s?.log("Querying REST API about SetupEntityAccess for TabSet in the org...");const i=await e.soqlQuery([{string:`SELECT Field, PermissionsRead, PermissionsEdit, ParentId, Parent.IsOwnedByProfile, Parent.ProfileId FROM FieldPermissions WHERE SObjectType = '${r}' `}],s),n=t.getInstance(be),o=i[0];s?.log(`Parsing ${o.length} Field Permissions...`);const c=new Map(await L.map(o,(t=>{const s=e.caseSafeId(t.Parent.IsOwnedByProfile?t.Parent.ProfileId:t.ParentId),a=t.Field.indexOf("."),r=-1===a?t.Field:t.Field.substring(a+1),i=n.create({properties:{fieldApiName:r,parentId:s,isRead:t.PermissionsRead,isEdit:t.PermissionsEdit}});return[`${t.Field}-${s}`,i]})));return s?.log("Done"),c}}class Mt extends M{async run(e,t,s){s?.log("Querying Tooling API about Validaiton Rules in the org...");const a=await e.soqlQuery([{string:"SELECT Id, Active, Description, ErrorDisplayField, ErrorMessage, ValidationName, EntityDefinition.QualifiedApiName FROM ValidationRule",tooling:!0}],s),r=t.getInstance(he),i=a[0];s?.log(`Parsing ${i.length} validation rules...`);const n=new Map(await L.map(i,(async t=>{const s=e.caseSafeId(t.Id),a=r.createWithScore({properties:{id:e.caseSafeId(s),name:t.ValidationName,isActive:t.Active,description:t.Description,errorDisplayField:t.ErrorDisplayField,errorMessage:t.ErrorMessage,objectId:t.EntityDefinition?.QualifiedApiName,url:e.setupUrl(s,U.VALIDATION_RULE)}});return[a.id,a]})));return s?.log("Done"),n}}class _t extends M{async run(e,t,s){s?.log("Querying REST API about PermissionSetLicenses in the org...");const a=await e.soqlQuery([{string:"SELECT Id, MasterLabel, CreatedDate, LastModifiedDate, TotalLicenses, Status, ExpirationDate, UsedLicenses, IsAvailableForIntegrations FROM PermissionSetLicense "},{string:"SELECT Id, LicenseId FROM PermissionSet WHERE IsOwnedByProfile = false AND LicenseId <> NULL "},{string:"SELECT AssigneeId, PermissionSet.LicenseId FROM PermissionSetAssignment WHERE Assignee.IsActive = TRUE AND PermissionSet.LicenseId <> NULL AND PermissionSet.IsOwnedByProfile = FALSE ORDER BY PermissionSetId "}],s),r=t.getInstance(ne),i=a[0],n=a[1],o=a[2];s?.log(`Parsing ${i.length} permission sets licenses...`);const c=new Map(await L.map(i,(t=>{const s=e.caseSafeId(t.Id),a=r.create({properties:{id:s,name:t.MasterLabel,createDate:t.CreatedDate,lastModifiedDate:t.LastModifiedDate,totalCount:t.TotalLicenses,usedCount:t.UsedLicenses,usedPercentage:0!==t.TotalLicenses?t.UsedLicenses/t.TotalLicenses:void 0,remainingCount:t.TotalLicenses-t.UsedLicenses,permissionSetIds:[],distinctActiveAssigneeCount:0,status:t.Status,expirationDate:t.ExpirationDate,isAvailableForIntegrations:t.IsAvailableForIntegrations,url:e.setupUrl(s,U.PERMISSION_SET_LICENSE)}});return[a.id,a]})));s?.log(`Parsing ${o.length} Permission Sets with a link to a License...`);const l=new Map;return await L.forEach(o,(t=>{if(t.PermissionSet&&t.PermissionSet.LicenseId&&t.PermissionSet.LicenseId.startsWith("0PL")){const s=e.caseSafeId(t.PermissionSet.LicenseId),a=e.caseSafeId(t.AssigneeId);!1===l.has(s)&&l.set(s,new Set),l.get(s).add(a),c.get(s).distinctActiveAssigneeCount=l.get(s).size}})),s?.log(`Parsing ${n.length} Permission Sets with a link to a License...`),await L.forEach(n,(t=>{const s=e.caseSafeId(t.Id),a=e.caseSafeId(t.LicenseId);c.has(a)&&c.get(a).permissionSetIds.push(s)})),s?.log(`Computing the score for ${c.size} permission set licenses...`),await L.forEach(c,(e=>{r.computeScore(e)})),s?.log("Done"),c}}class Dt extends _{_datasets;_datasetPromisesCache;_dataCache;_sfdcManager;_logger;_dataFactory;constructor(e,t,s){if(super(),e instanceof A==!1)throw new TypeError("The given sfdcManager is not an instance of SalesforceManagerIntf.");if(s instanceof R==!1)throw new TypeError("The given logger is not an instance of LoggerIntf.");this._sfdcManager=e,this._logger=s,this._dataCache=t,this._datasets=new Map,this._datasetPromisesCache=new Map,this._dataFactory=new yt,this._datasets.set(D.APEXCLASSES,new Et),this._datasets.set(D.APEXTRIGGERS,new It),this._datasets.set(D.APPLICATIONS,new Ot),this._datasets.set(D.APPPERMISSIONS,new Je),this._datasets.set(D.CURRENTUSERPERMISSIONS,new at),this._datasets.set(D.CUSTOMFIELDS,new je),this._datasets.set(D.CUSTOMLABELS,new He),this._datasets.set(D.FIELDPERMISSIONS,new At),this._datasets.set(D.FLOWS,new Rt),this._datasets.set(D.GROUPS,new St),this._datasets.set(D.LIGHTNINGAURACOMPONENTS,new ht),this._datasets.set(D.LIGHTNINGPAGES,new ft),this._datasets.set(D.LIGHTNINGWEBCOMPONENTS,new mt),this._datasets.set(D.OBJECT,new Qe),this._datasets.set(D.OBJECTPERMISSIONS,new qe),this._datasets.set(D.OBJECTS,new Ye),this._datasets.set(D.OBJECTTYPES,new Ke),this._datasets.set(D.ORGANIZATION,new st),this._datasets.set(D.PACKAGES,new rt),this._datasets.set(D.PERMISSIONSETS,new it),this._datasets.set(D.PERMISSIONSETLICENSES,new _t),this._datasets.set(D.PROFILEPWDPOLICIES,new dt),this._datasets.set(D.PROFILERESTRICTIONS,new lt),this._datasets.set(D.PROFILES,new nt),this._datasets.set(D.USERROLES,new wt),this._datasets.set(D.USERS,new pt),this._datasets.set(D.VALIDATIONRULES,new Mt),this._datasets.set(D.VISUALFORCECOMPONENTS,new ut),this._datasets.set(D.VISUALFORCEPAGES,new gt),this._datasets.set(D.WORKFLOWS,new Tt)}async run(e){if(e instanceof Array==!1)throw new TypeError("The given datasets is not an instance of Array.");return new Map(await Promise.all(e.map((e=>{const t="string"==typeof e?e:e.alias,s="string"==typeof e?e:e.cacheKey,a="string"==typeof e?void 0:e.parameters,r=`DATASET ${t}`;return!1===this._datasetPromisesCache.has(s)&&this._datasetPromisesCache.set(s,new Promise(((e,i)=>{this._logger.log(r,`Checking the data cache for key=${s}...`),!0===this._dataCache.has(s)?(this._logger.ended(r,"There was data in data cache, we use it!"),e([t,this._dataCache.get(s)])):(this._logger.log(r,"There was no data in data cache. Let's retrieve data."),this._datasets.get(t).run(this._sfdcManager,this._dataFactory,this._logger.toSimpleLogger(r),a).then((a=>{this._dataCache.set(s,a),this._logger.ended(r,`Data retrieved and saved in cache with key=${s}`),e([t,a])})).catch((e=>{this._logger.failed(r,e),i(e)})))}))),this._datasetPromisesCache.get(s)}))))}clean(e){if(e instanceof Array==!1)throw new TypeError("The given datasets is not an instance of Array.");e.forEach((e=>{const t="string"==typeof e?e:e.cacheKey;this._dataCache.remove(t),this._datasetPromisesCache.delete(t)}))}}class Lt extends R{_logger;_operationNames;_countSuccesses;_countFailures;constructor(e){super(),this._logger=e,this._countSuccesses=0,this._countFailures=0,this._operationNames=new Map}log(e,t){Nt(e,"LOG",t),this._logger?.log(e,t),this._operationNames.set(e,0)}ended(e,t){Nt(e,"ENDED",t),this._countSuccesses++,this._logger?.ended(e,t),this._operationNames.set(e,1)}failed(e,t){Nt(e,"FAILED",t),this._countFailures++,this._logger?.failed(e,t),this._operationNames.set(e,2)}toSimpleLogger(e){const t=this._logger;return{log:s=>{Nt(e,"LOG",s),t?.log(e,s)},debug:t=>{Nt(e,"DEBUG",t)}}}}const Nt=(e,t,s="...")=>{console.error(`${(new Date).toISOString()} - ${e} - ${t} - ${s}`)};class xt extends N{extract(e){return[D.USERS,D.PROFILES,D.PERMISSIONSETS]}async transform(e,t){const s=e.get(D.USERS),a=e.get(D.PROFILES),r=e.get(D.PERMISSIONSETS);if(!s)throw new Error("RecipeActiveUsers: Data from dataset alias 'USERS' was undefined.");if(!a)throw new Error("RecipeActiveUsers: Data from dataset alias 'PROFILES' was undefined.");if(!r)throw new Error("RecipeActiveUsers: Data from dataset alias 'PERMISSIONSETS' was undefined.");return await L.forEach(s,(async e=>{e.profileRef=a.get(e.profileId),e.permissionSetRefs=await L.map(e.permissionSetIds,(e=>r.get(e)),(e=>r.has(e))),e.aggregateImportantPermissions={},e.profileRef?.importantPermissions&&Object.keys(e.profileRef.importantPermissions).filter((t=>!0===e.profileRef.importantPermissions[t])).forEach((t=>{e.aggregateImportantPermissions[t]=[e.profileRef]})),await L.forEach(e.permissionSetRefs,(t=>{Object.keys(t.importantPermissions).filter((e=>!0===t.importantPermissions[e])).forEach((s=>{e.aggregateImportantPermissions[s]||(e.aggregateImportantPermissions[s]=[]),e.aggregateImportantPermissions[s].push(t)}))}))})),[...s.values()]}}class Ft extends N{extract(e){return[D.APEXCLASSES]}async transform(e,t,s){const a=e.get(D.APEXCLASSES);if(!a)throw new Error("RecipeApexClasses: Data from dataset alias 'APEXCLASSES' was undefined.");const r=[];return await L.forEach(a,(async e=>{const t=await Promise.all([L.map(e.relatedTestClassIds,(e=>a.get(e))),L.map(e.relatedClassIds,(e=>a.get(e)))]);e.relatedTestClassRefs=t[0],e.relatedClassRefs=t[1],"*"!==s&&e.package!==s||!1!==e.isTest||!1!==e.needsRecompilation||r.push(e)})),r}}class Ut extends N{extract(e){return[D.APEXTRIGGERS,D.OBJECTS]}async transform(e,t,s){const a=e.get(D.APEXTRIGGERS),r=e.get(D.OBJECTS);if(!a)throw new Error("RecipeApexTriggers: Data from dataset alias 'APEXTRIGGERS' was undefined.");if(!r)throw new Error("RecipeApexTriggers: Data from dataset alias 'OBJECTS' was undefined.");const i=[];return await L.forEach(a,(e=>{e.objectRef=r.get(e.objectId),"*"!==s&&e.package!==s||i.push(e)})),i}}class vt extends N{extract(e){return[D.APPLICATIONS,D.APPPERMISSIONS,D.PROFILES,D.PERMISSIONSETS]}async transform(e,t,s){const a=e.get(D.APPLICATIONS),r=e.get(D.APPPERMISSIONS),i=e.get(D.PROFILES),n=e.get(D.PERMISSIONSETS);if(!a)throw new Error("RecipeAppPermissions: Data from dataset alias 'APPLICATIONS' was undefined.");if(!r)throw new Error("RecipeAppPermissions: Data from dataset alias 'APPPERMISSIONS' was undefined.");if(!i)throw new Error("RecipeAppPermissions :Data from dataset alias 'PROFILES' was undefined.");if(!n)throw new Error("RecipeAppPermissions: Data from dataset alias 'PERMISSIONSETS' was undefined.");const o=u.create();return await L.forEach(r,(e=>{e.appRef=a.get(e.appId),!0===e.parentId.startsWith("0PS")?e.parentRef=n.get(e.parentId):e.parentRef=i.get(e.parentId),"*"!==s&&e.parentRef.package!==s&&e.appRef.appPackage!==s||(!1===o.hasRowHeader(e.parentId)&&o.setRowHeader(e.parentId,e.parentRef),!1===o.hasColumnHeader(e.appId)&&o.setColumnHeader(e.appId,e.appRef),o.addValueToProperty(e.parentId,e.appId,(e.isAccessible?"A":"")+(e.isVisible?"V":"")))})),o.toDataMatrix()}}class Gt extends N{extract(e,t){const s=new w(D.CURRENTUSERPERMISSIONS,D.CURRENTUSERPERMISSIONS);return s.parameters.set("permissions",t),[s]}async transform(e,t){const s=e.get(D.CURRENTUSERPERMISSIONS);if(!s)throw new Error("RecipeCurrentUserPermissions: Data from dataset alias 'CURRENTUSERPERMISSIONS' was undefined.");return s}}class $t extends N{extract(e){return[D.CUSTOMFIELDS,D.OBJECTTYPES,D.OBJECTS]}async transform(e,t,s,a,r){const i=e.get(D.OBJECTTYPES),n=e.get(D.OBJECTS),o=e.get(D.CUSTOMFIELDS);if(!i)throw new Error("RecipeCustomFields: Data from dataset alias 'OBJECTTYPES' was undefined.");if(!n)throw new Error("RecipeCustomFields: Data from dataset alias 'OBJECTS' was undefined.");if(!o)throw new Error("RecipeCustomFields: Data from dataset alias 'CUSTOMFIELDS' was undefined.");await L.forEach(o,(e=>{const t=n.get(e.objectId);t&&!t.typeRef&&(t.typeRef=i.get(t.typeId)),e.objectRef=t}));const c=[];return await L.forEach(o,(e=>{"*"!==s&&e.package!==s||"*"!==a&&e.objectRef?.typeRef?.id!==a||"*"!==r&&e.objectRef?.apiname!==r||c.push(e)})),c}}class Bt extends N{extract(e){return[D.CUSTOMLABELS]}async transform(e,t,s){const a=e.get(D.CUSTOMLABELS);if(!a)throw new Error("RecipeCustomLabels: Data from dataset alias 'CUSTOMLABELS' was undefined.");const r=[];return await L.forEach(a,(e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class Vt extends N{extract(e){return[D.FLOWS]}async transform(e,t){const s=e.get(D.FLOWS);if(!s)throw new Error("RecipeFlows: Data from dataset alias 'FLOWS' was undefined.");const a=[];return await L.forEach(s,(e=>{"Workflow"!==e.type&&a.push(e)})),a}}class Wt extends N{extract(e){return[D.LIGHTNINGAURACOMPONENTS]}async transform(e,t,s){const a=e.get(D.LIGHTNINGAURACOMPONENTS);if(!a)throw new Error("RecipeLightningAuraComponents: Data from dataset alias 'LIGHTNINGAURACOMPONENTS' was undefined.");const r=[];return await L.forEach(a,(e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class kt extends N{extract(e){return[D.LIGHTNINGPAGES,D.OBJECTS]}async transform(e,t,s){const a=e.get(D.LIGHTNINGPAGES),r=e.get(D.OBJECTS);if(!a)throw new Error("RecipeLightningPages: Data from dataset alias 'LIGHTNINGPAGES' was undefined.");if(!r)throw new Error("RecipeLightningPages: Data from dataset alias 'OBJECTS' was undefined.");const i=[];return await L.forEach(a,(e=>{e.objectId&&(e.objectRef=r.get(e.objectId)),"*"!==s&&e.package!==s||i.push(e)})),i}}class jt extends N{extract(e){return[D.LIGHTNINGWEBCOMPONENTS]}async transform(e,t,s){const a=e.get(D.LIGHTNINGWEBCOMPONENTS);if(!a)throw new Error("RecipeLightningWebComponents: Data from dataset alias 'LIGHTNINGWEBCOMPONENTS' was undefined.");const r=[];return await L.forEach(a,(e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class Ht extends N{extract(e,t){const s=new w(D.OBJECT,`${D.OBJECT}_${t}`),a=new w(D.CUSTOMFIELDS,`${D.CUSTOMFIELDS}_${t}`);return s.parameters.set("object",t),a.parameters.set("object",t),[s,D.OBJECTTYPES,D.APEXTRIGGERS,D.LIGHTNINGPAGES,a]}async transform(e,t){const s=e.get(D.OBJECTTYPES),a=e.get(D.OBJECT),r=e.get(D.APEXTRIGGERS),i=e.get(D.LIGHTNINGPAGES),n=e.get(D.CUSTOMFIELDS);if(!s)throw new Error("RecipeObject: Data from dataset alias 'OBJECTTYPES' was undefined.");if(!a)throw new Error("RecipeObject: Data from dataset alias 'OBJECT' was undefined.");if(!r)throw new Error("RecipeObject: Data from dataset alias 'APEXTRIGGERS' was undefined.");if(!i)throw new Error("RecipeObject: Data from dataset alias 'LIGHTNINGPAGES' was undefined.");if(!n)throw new Error("RecipeObject: Data from dataset alias 'CUSTOMFIELDS' was undefined.");a.typeRef=s.get(a.typeId),a.flexiPages=[];const o=await Promise.all([L.map(a.apexTriggerIds,(e=>{const t=r.get(e);return t.objectRef=a,t}),(e=>r.has(e))),L.forEach(i,(e=>{e.objectId===a.id&&a.flexiPages.push(e)})),L.map(a.customFieldIds,(e=>{const t=n.get(e);return t.objectRef=a,t}),(e=>n.has(e)))]);return a.apexTriggerRefs=o[0],a.customFieldRefs=o[2],a}}class Qt extends N{extract(e){return[D.OBJECTPERMISSIONS,D.PROFILES,D.PERMISSIONSETS]}async transform(e,t,s){const a=e.get(D.OBJECTPERMISSIONS),r=e.get(D.PROFILES),i=e.get(D.PERMISSIONSETS);if(!a)throw new Error("RecipeObjectPermissions: Data from dataset alias 'OBJECTPERMISSIONS' was undefined.");if(!r)throw new Error("RecipeObjectPermissions: Data from dataset alias 'PROFILES' was undefined.");if(!i)throw new Error("RecipeObjectPermissions: Data from dataset alias 'PERMISSIONSETS' was undefined.");const n=u.create();return await L.forEach(a,(e=>{!0===e.parentId.startsWith("0PS")?e.parentRef=i.get(e.parentId):e.parentRef=r.get(e.parentId),"*"!==s&&e.parentRef.package!==s||(!1===n.hasRowHeader(e.parentId)&&n.setRowHeader(e.parentId,e.parentRef),n.addValueToProperty(e.parentId,e.objectType,(e.isCreate?"C":"")+(e.isRead?"R":"")+(e.isEdit?"U":"")+(e.isDelete?"D":"")+(e.isViewAll?"v":"")+(e.isModifyAll?"m":"")))})),n.toDataMatrix()}}class qt extends N{extract(e){return[D.OBJECTTYPES,D.OBJECTS]}async transform(e,t,s,a){const r=e.get(D.OBJECTTYPES),i=e.get(D.OBJECTS);if(!r)throw new Error("RecipeObjects: Data from dataset alias 'OBJECTTYPES' was undefined.");if(!i)throw new Error("RecipeObjects: Data from dataset alias 'OBJECTS' was undefined.");const n=[];return await L.forEach(i,(e=>{e.typeRef=r.get(e.typeId),"*"!==s&&e.package!==s||"*"!==a&&e.typeRef?.id!==a||n.push(e)})),n.sort(((e,t)=>e.label<t.label?-1:1))}}class Jt extends N{extract(e){return[D.OBJECTTYPES]}async transform(e,t){const s=e.get(D.OBJECTTYPES);if(!s)throw new Error("RecipeObjectTypes: Data from dataset alias 'OBJECTTYPES' was undefined.");return[...s.values()]}}class Yt extends N{extract(e){return[D.ORGANIZATION]}async transform(e,t){const s=e.get(D.ORGANIZATION);if(!s)throw new Error("RecipeOrganization: Data from dataset alias 'ORGANIZATION' was undefined.");return s}}class Xt extends N{extract(e){return[D.PACKAGES]}async transform(e,t){const s=e.get(D.PACKAGES);if(!s)throw new Error("RecipePackages: Data from dataset alias 'PACKAGES' was undefined.");return[...s.values()]}}class Kt extends N{extract(e){return[D.PERMISSIONSETS]}async transform(e,t,s){const a=e.get(D.PERMISSIONSETS);if(!a)throw new Error("RecipePermissionSets: Data from dataset alias 'PERMISSIONSETS' was undefined.");const r=[];return await L.forEach(a,(async e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class zt extends N{extract(e){return[D.FLOWS]}async transform(e,t){const s=e.get(D.FLOWS);if(!s)throw new Error("RecipeProcessBuilders: Data from dataset alias 'FLOWS' was undefined.");const a=[];return await L.forEach(s,(e=>{"Workflow"===e.type&&a.push(e)})),a}}class Zt extends N{extract(e){return[D.PROFILEPWDPOLICIES]}async transform(e,t){const s=e.get(D.PROFILEPWDPOLICIES);if(!s)throw new Error("RecipeProfilePasswordPolicies: Data from dataset alias 'PROFILEPWDPOLICIES' was undefined.");return[...s.values()]}}class es extends N{extract(e){return[D.PROFILES,D.PROFILERESTRICTIONS]}async transform(e,t,s){const a=e.get(D.PROFILES),r=e.get(D.PROFILERESTRICTIONS);if(!a)throw new Error("RecipeProfileRestrictions: Data from dataset alias 'PROFILES' was undefined.");if(!r)throw new Error("RecipeProfileRestrictions: Data from dataset alias 'PROFILERESTRICTIONS' was undefined.");const i=[];return await L.forEach(r,(e=>{e.profileRef=a.get(e.profileId),"*"!==s&&e.profileRef?.package!==s||i.push(e)})),i}}class ts extends N{extract(e){return[D.PROFILES]}async transform(e,t,s){const a=e.get(D.PROFILES);if(!a)throw new Error("RecipeProfiles: Data from dataset alias 'PROFILES' was undefined.");const r=[];return await L.forEach(a,(e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class ss extends N{extract(e){return[D.USERS,D.GROUPS]}async transform(e,t){const s=e.get(D.GROUPS),a=e.get(D.USERS);if(!s)throw new Error("RecipePublicGroups: Data from dataset alias 'GROUPS' was undefined.");if(!a)throw new Error("RecipePublicGroups: Data from dataset alias 'USERS' was undefined.");const r=[];return await L.forEach(s,(async e=>{e.directUserRefs=await L.map(e.directUserIds,(e=>a.get(e)),(e=>a.has(e))),e.directGroupRefs=await L.map(e.directGroupIds,(e=>s.get(e)),(e=>s.has(e))),!0===e.isPublicGroup&&r.push(e)})),r}}class as extends N{extract(e){return[D.USERS,D.GROUPS]}async transform(e,t){const s=e.get(D.GROUPS),a=e.get(D.USERS);if(!s)throw new Error("RecipeQueues: Data from dataset alias 'GROUPS' was undefined.");if(!a)throw new Error("RecipeQueues: Data from dataset alias 'USERS' was undefined.");const r=[];return await L.forEach(s,(async e=>{e.directUserRefs=await L.map(e.directUserIds,(e=>a.get(e)),(e=>a.has(e))),e.directGroupRefs=await L.map(e.directGroupIds,(e=>s.get(e)),(e=>s.has(e))),!0===e.isQueue&&r.push(e)})),r}}class rs extends N{extract(e){return[D.USERROLES,D.USERS]}async transform(e,t){const s=e.get(D.USERROLES),a=e.get(D.USERS);if(!s)throw new Error("RecipeUserRoles: Data from dataset alias 'USERROLES' was undefined.");if(!a)throw new Error("RecipeUserRoles: Data from dataset alias 'USERS' was undefined.");return await L.forEach(s,(async e=>{!0===e.hasActiveMembers&&(e.activeMemberRefs=await L.map(e.activeMemberIds,(e=>a.get(e)))),!0===e.hasParent&&(e.parentRef=s.get(e.parentId))})),[...s.values()]}}class is extends N{extract(e){return[D.VISUALFORCECOMPONENTS]}async transform(e,t,s){const a=e.get(D.VISUALFORCECOMPONENTS);if(!a)throw new Error("RecipeVisualForceComponents: Data from dataset alias 'VISUALFORCECOMPONENTS' was undefined.");const r=[];return await L.forEach(a,(e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class ns extends N{extract(e){return[D.VISUALFORCEPAGES]}async transform(e,t,s){const a=e.get(D.VISUALFORCEPAGES);if(!a)throw new Error("RecipeVisualForcePages: Data from dataset alias 'VISUALFORCEPAGES' was undefined.");const r=[];return await L.forEach(a,(e=>{"*"!==s&&e.package!==s||r.push(e)})),r}}class os extends N{extract(e){return[D.WORKFLOWS]}async transform(e,t){const s=e.get(D.WORKFLOWS);if(!s)throw new Error("RecipeWorkflows: Data from dataset alias 'WORKFLOWS' was undefined.");return[...s.values()]}}class cs extends N{extract(e){return[D.APEXCLASSES]}async transform(e,t,s){const a=e.get(D.APEXCLASSES);if(!a)throw new Error("RecipeApexTests: Data from dataset alias 'APEXCLASSES' was undefined.");const r=[];return await L.forEach(a,(async e=>{const t=await Promise.all([L.map(e.relatedTestClassIds,(e=>a.get(e))),L.map(e.relatedClassIds,(e=>a.get(e)))]);e.relatedTestClassRefs=t[0],e.relatedClassRefs=t[1],"*"!==s&&e.package!==s||!0!==e.isTest||!1!==e.needsRecompilation||r.push(e)})),r}}class ls extends N{extract(e){return[D.APEXCLASSES]}async transform(e,t,s){const a=e.get(D.APEXCLASSES);if(!a)throw new Error("RecipeApexUncompiled: Data from dataset alias 'APEXCLASSES' was undefined.");const r=[];return await L.forEach(a,(async e=>{const t=await Promise.all([L.map(e.relatedTestClassIds,(e=>a.get(e))),L.map(e.relatedClassIds,(e=>a.get(e)))]);e.relatedTestClassRefs=t[0],e.relatedClassRefs=t[1],"*"!==s&&e.package!==s||!0!==e.needsRecompilation||r.push(e)})),r}}class ds extends N{extract(e,t){const s=new w(D.FIELDPERMISSIONS,`${D.FIELDPERMISSIONS}_${t}`);return s.parameters.set("object",t),[s,D.PROFILES,D.PERMISSIONSETS]}async transform(e,t,s,a){const r=e.get(D.FIELDPERMISSIONS),i=e.get(D.PROFILES),n=e.get(D.PERMISSIONSETS);if(!r)throw new Error("RecipeFieldPermissions: Data from dataset alias 'FIELDPERMISSIONS' was undefined.");if(!i)throw new Error("RecipeFieldPermissions: Data from dataset alias 'PROFILES' was undefined.");if(!n)throw new Error("RecipeFieldPermissions: Data from dataset alias 'PERMISSIONSETS' was undefined.");const o=u.create();return await L.forEach(r,(e=>{!0===e.parentId.startsWith("0PS")?e.parentRef=n.get(e.parentId):e.parentRef=i.get(e.parentId),"*"!==a&&e.parentRef.package!==a||(!1===o.hasRowHeader(e.parentId)&&o.setRowHeader(e.parentId,e.parentRef),o.addValueToProperty(e.parentId,e.fieldApiName,(e.isRead?"R":"")+(e.isEdit?"U":"")))})),o.toDataMatrix()}}class ps extends N{extract(e){return[D.VALIDATIONRULES,D.OBJECTTYPES,D.OBJECTS]}async transform(e,t){const s=e.get(D.OBJECTTYPES),a=e.get(D.OBJECTS),r=e.get(D.VALIDATIONRULES);if(!s)throw new Error("RecipeValidationRules: Data from dataset alias 'OBJECTTYPES' was undefined.");if(!a)throw new Error("RecipeValidationRules: Data from dataset alias 'OBJECTS' was undefined.");if(!r)throw new Error("RecipeValidationRules: Data from dataset alias 'VALIDATIONRULES' was undefined.");return await L.forEach(r,(e=>{const t=a.get(e.objectId);t&&!t.typeRef&&(t.typeRef=s.get(t.typeId)),e.objectRef=t})),[...r.values()]}}class gs extends N{extract(e){return[D.PERMISSIONSETLICENSES,D.PERMISSIONSETS]}async transform(e,t){const s=e.get(D.PERMISSIONSETLICENSES),a=e.get(D.PERMISSIONSETS);if(!s)throw new Error("RecipePermissionSetLicenses: Data from dataset alias 'PERMISSIONSETLICENSES' was undefined.");if(!a)throw new Error("RecipePermissionSetLicenses: Data from dataset alias 'PERMISSIONSETS' was undefined.");return await L.forEach(s,(async e=>{e.permissionSetRefs=await L.map(e.permissionSetIds,(e=>a.get(e)),(e=>a.has(e)))})),[...s.values()]}}class us extends x{_logger;_recipes;_datasetManager;constructor(e,t){if(super(),e instanceof _==!1)throw new TypeError("The given datasetManager is not an instance of DatasetManagerIntf.");if(t instanceof R==!1)throw new TypeError("The given logger is not an instance of LoggerIntf.");this._datasetManager=e,this._logger=t,this._recipes=new Map,this._recipes.set(F.ACTIVE_USERS,new xt),this._recipes.set(F.APEX_CLASSES,new Ft),this._recipes.set(F.APEX_TESTS,new cs),this._recipes.set(F.APEX_TRIGGERS,new Ut),this._recipes.set(F.APEX_UNCOMPILED,new ls),this._recipes.set(F.APP_PERMISSIONS,new vt),this._recipes.set(F.CURRENT_USER_PERMISSIONS,new Gt),this._recipes.set(F.CUSTOM_FIELDS,new $t),this._recipes.set(F.CUSTOM_LABELS,new Bt),this._recipes.set(F.FIELD_PERMISSIONS,new ds),this._recipes.set(F.FLOWS,new Vt),this._recipes.set(F.LIGHTNING_AURA_COMPONENTS,new Wt),this._recipes.set(F.LIGHTNING_PAGES,new kt),this._recipes.set(F.LIGHTNING_WEB_COMPONENTS,new jt),this._recipes.set(F.OBJECT,new Ht),this._recipes.set(F.OBJECT_PERMISSIONS,new Qt),this._recipes.set(F.OBJECTS,new qt),this._recipes.set(F.OBJECT_TYPES,new Jt),this._recipes.set(F.ORGANIZATION,new Yt),this._recipes.set(F.PACKAGES,new Xt),this._recipes.set(F.PERMISSION_SETS,new Kt),this._recipes.set(F.PERMISSION_SET_LICENSES,new gs),this._recipes.set(F.PROCESS_BUILDERS,new zt),this._recipes.set(F.PROFILE_PWD_POLICIES,new Zt),this._recipes.set(F.PROFILE_RESTRICTIONS,new es),this._recipes.set(F.PROFILES,new ts),this._recipes.set(F.PUBLIC_GROUPS,new ss),this._recipes.set(F.QUEUES,new as),this._recipes.set(F.USER_ROLES,new rs),this._recipes.set(F.VALIDATION_RULES,new ps),this._recipes.set(F.VISUALFORCE_COMPONENTS,new is),this._recipes.set(F.VISUALFORCE_PAGES,new ns),this._recipes.set(F.WORKFLOWS,new os)}async run(e,...t){if(!1===this._recipes.has(e))throw new TypeError(`The given alias (${e}) does not correspond to a registered recipe.`);const s=`RECIPE ${e}`,a=this._recipes.get(e);let r,i,n;this._logger.log(s,"How many datasets this recipe has?");try{r=a.extract(this._logger.toSimpleLogger(s),...t)}catch(e){throw this._logger.failed(s,e),e}this._logger.log(s,`This recipe has ${r?.length} ${r?.length>1?"datasets":"dataset"}: ${r.map((e=>e instanceof w?e.alias:e)).join(", ")}...`);try{i=await this._datasetManager.run(r)}catch(e){throw this._logger.failed(s,e),e}this._logger.log(s,"Datasets information successfuly retrieved!"),this._logger.log(s,"This recipe will now transform all this information...");try{n=await a.transform(i,this._logger.toSimpleLogger(s),...t)}catch(e){throw this._logger.failed(s,e),e}return this._logger.ended(s,"Transformation successfuly done!"),n}clean(e,...t){if(!1===this._recipes.has(e))throw new TypeError(`The given alias (${e}) does not correspond to a registered recipe.`);const s=`RECIPE ${e}`,a=this._recipes.get(e);let r;this._logger.log(s,"How many datasets this recipe has?");try{r=a.extract(this._logger.toSimpleLogger(s),...t)}catch(e){throw this._logger.failed(s,e),e}this._logger.log(s,`This recipe has ${r?.length} ${r?.length>1?"datasets":"dataset"}: ${r.map((e=>e instanceof w?e.alias:e)).join(", ")}...`),this._logger.log(s,"Clean all datasets...");try{this._datasetManager.clean(r)}catch(e){throw this._logger.failed(s,e),e}this._logger.ended(s,"Datasets succesfully cleaned!")}}const hs=2e3;class ms extends A{_apiVersion;_watchDog;_connection;constructor(e,t){super(),this._apiVersion=Te.CurrentApiVersion;const s=new e.Connection({accessToken:t,version:this._apiVersion+".0",maxRequest:15});this._watchDog=new C((()=>({used:s.limitInfo?.apiUsage?.used,max:s.limitInfo?.apiUsage?.limit}))),this._connection=s}get apiVersion(){return this._apiVersion}caseSafeId(e){return e&&18===e.length?e.substr(0,15):e}setupUrl(e,t,s,a){if(!e)return"";switch(t){case U.STANDARD_FIELD:case U.CUSTOM_FIELD:case U.ANY_FIELD:switch(a){case U.STANDARD_OBJECT:case U.CUSTOM_OBJECT:case U.KNOWLEDGE_ARTICLE:return"/lightning/setup/ObjectManager/"+(s?`${s}/FieldsAndRelationships/${e}/view`:`page?address=%2F${e}`);case U.CUSTOM_BIG_OBJECT:return`/lightning/setup/BigObjects/page?address=%2F${e}%3Fsetupid%3DBigObjects`;case U.CUSTOM_EVENT:return`/lightning/setup/EventObjects/page?address=%2F${e}%3Fsetupid%3DEventObjects`;case U.CUSTOM_SETTING:return`/lightning/setup/CustomSettings/page?address=%2F${e}%3Fsetupid%3DCustomSettings`;case U.CUSTOM_METADATA_TYPE:return`/lightning/setup/CustomMetadata/page?address=%2F${e}%3Fsetupid%3DCustomMetadata`;case U.EXTERNAL_OBJECT:return`/lightning/setup/ExternalObjects/page?address=%2F${e}%3Fsetupid%3DExternalObjects`;default:return`/lightning/setup/ObjectManager/page?address=%2F${e}`}case U.STANDARD_OBJECT:case U.CUSTOM_OBJECT:case U.KNOWLEDGE_ARTICLE:return`/lightning/setup/ObjectManager/${e}/Details/view`;case U.CUSTOM_BIG_OBJECT:return`/lightning/setup/BigObjects/page?address=%2F${e}%3Fsetupid%3DBigObjects`;case U.CUSTOM_EVENT:return`/lightning/setup/EventObjects/page?address=%2F${e}%3Fsetupid%3DEventObjects`;case U.CUSTOM_SETTING:return`/lightning/setup/CustomSettings/page?address=%2F${e}%3Fsetupid%3DCustomSettings`;case U.CUSTOM_METADATA_TYPE:return`/lightning/setup/CustomMetadata/page?address=%2F${e}%3Fsetupid%3DCustomMetadata`;case U.EXTERNAL_OBJECT:return`/lightning/setup/ExternalObjects/page?address=%2F${e}%3Fsetupid%3DExternalObjects`;case U.PAGE_LAYOUT:return"/lightning/setup/ObjectManager/"+(s?`${s}/PageLayouts/${e}/view`:`page?address=%2F${e}`);case U.VALIDATION_RULE:return`/lightning/setup/ObjectManager/page?address=%2F${e}`;case U.WEB_LINK:return"/lightning/setup/ObjectManager/"+(s?`${s}/ButtonsLinksActions/${e}/view`:`page?address=%2F${e}`);case U.RECORD_TYPE:return"/lightning/setup/ObjectManager/"+(s?`${s}/RecordTypes/${e}/view`:`page?address=%2F${e}`);case U.APEX_TRIGGER:return"/lightning/setup/ObjectManager/"+(s?`${s}/ApexTriggers/${e}/view`:`page?address=%2F${e}`);case U.FIELD_SET:return"/lightning/setup/ObjectManager/"+(s?`${s}/FieldSets/${e}/view`:`page?address=%2F${e}`);case U.USER:return`/lightning/setup/ManageUsers/page?address=%2F${e}%3Fnoredirect%3D1%26isUserEntityOverride%3D1`;case U.PROFILE:return`/lightning/setup/EnhancedProfiles/page?address=%2F${e}`;case U.PERMISSION_SET:return`/lightning/setup/PermSets/page?address=%2F${e}`;case U.PERMISSION_SET_LICENSE:return`/lightning/setup/PermissionSetLicense/page?address=%2F${e}`;case U.PERMISSION_SET_GROUP:return`/lightning/setup/PermSetGroups/page?address=%2F${e}`;case U.ROLE:return`/lightning/setup/Roles/page?address=%2F${e}`;case U.PUBLIC_GROUP:return`/lightning/setup/PublicGroups/page?address=%2Fsetup%2Fown%2Fgroupdetail.jsp%3Fid%3D${e}`;case U.QUEUE:return`/lightning/setup/Queues/page?address=%2Fp%2Fown%2FQueue%2Fd%3Fid%3D${e}`;case U.TECHNICAL_GROUP:return"";case U.CUSTOM_LABEL:return`/lightning/setup/ExternalStrings/page?address=%2F${e}`;case U.STATIC_RESOURCE:return`/lightning/setup/StaticResources/page?address=%2F${e}`;case U.CUSTOM_SITE:return`/servlet/networks/switch?networkId=${e}&startURL=%2FcommunitySetup%2FcwApp.app%23%2Fc%2Fhome&`;case U.CUSTOM_TAB:return`/lightning/setup/CustomTabs/page?address=%2F${e}`;case U.FLOW_VERSION:return`/builder_platform_interaction/flowBuilder.app?flowId=${e}`;case U.FLOW_DEFINITION:return`/${e}`;case U.WORKFLOW_RULE:return`/lightning/setup/WorkflowRules/page?address=%2F${e}&nodeId=WorkflowRules`;case U.VISUAL_FORCE_PAGE:return`/lightning/setup/ApexPages/page?address=%2F${e}`;case U.VISUAL_FORCE_COMPONENT:return`/lightning/setup/ApexComponent/page?address=%2F${e}`;case U.AURA_WEB_COMPONENT:case U.LIGHTNING_WEB_COMPONENT:return`/lightning/setup/LightningComponentBundles/page?address=%2F${e}`;case U.LIGHTNING_PAGE:return"/lightning/setup/ObjectManager/"+(s?`${s}/LightningPages/${e}/view`:`page?address=%2F${e}`);case U.APEX_CLASS:return`/lightning/setup/ApexClasses/page?address=%2F${e}`;default:return console.error(`Type <${t}> not supported yet. Returning "/id" as url. FYI, id was <${e}>, parentId was <${s}> and parentType was <${a}>`),`/${e}`}}getObjectType(e,t){return!0===t?V:e.endsWith("__c")?$:e.endsWith("__x")?B:e.endsWith("__mdt")?W:e.endsWith("__e")?k:e.endsWith("__ka")?j:e.endsWith("__b")?H:G}get dailyApiRequestLimitInformation(){return this._watchDog.dailyApiRequestLimitInformation}async _standardSOQLQuery(e,t,s,a){const r=!0===e?this._connection.tooling:this._connection,i=[],n=async e=>{let s;this._watchDog?.beforeRequest(),s=void 0===e?await r.query(t,{autoFetch:!1,headers:{"Sforce-Query-Options":"batchSize=2000"}}):await r.queryMore(e),a(s?.records?.length||0),this._watchDog?.afterRequest(),i.push(...s.records),!1===s.done&&await n(s.nextRecordsUrl)};try{return await n(),i}catch(e){if(s&&s.includes&&s.includes(e.errorCode))return[];throw Object.assign(e,{context:{when:"While running a SOQL query with the standard queryMore",what:t}})}}async _customSOQLQuery(e,t,s,a){const r=!0===e?this._connection.tooling:this._connection,i=[],n=async e=>{const o=`${t} AND ${s}>'${e}' ORDER BY ${s} LIMIT 2000`;this._watchDog?.beforeRequest();const c=await r.query(o,{autoFetch:!1,headers:{"Sforce-Query-Options":"batchSize=2000"}});if(a(c?.records?.length||0),this._watchDog?.afterRequest(),i.push(...c.records),c.records.length>=hs){const e=i[i.length-1][s];await n(e)}};try{return await n("000000000000000000"),i}catch(e){throw Object.assign(e,{context:{when:"While running a SOQL query with the custom queryMore",what:t}})}}async soqlQuery(e,t){t?.log(`Preparing ${e.length} SOQL ${e.length>1?"queries":"query"}...`);let s=0,a=0;const r=[],i=[],n=[],o=[],c=()=>{t?.log(`Processing ${e.length} SOQL ${e.length>1?"queries":"query"}... 🎥 Records retrieved: ${s}, 🙌 Number of QueryMore calls done: ${a}, ⏳ Pending: (${r.length}) on [${r.join(", ")}], ✅ Done: (${i.length}) on [${i.join(", ")}], ❌ Error: (${n.length}) on [${n.join(", ")}]`)},l=e=>{a++,s+=e,c()},d=await Promise.allSettled(e.map((async e=>{const t=e.string.lastIndexOf("FROM ")+5,s=e.string.indexOf(" ",t),a=e.string.substring(t,-1===s?e.string.length:s);let d;r.push(a);try{d=e.queryMoreField?await this._customSOQLQuery(e.tooling,e.string,e.queryMoreField,l):await this._standardSOQLQuery(e.tooling,e.string,e.byPasses,l),i.push(a)}catch(e){throw n.push(a),o.push(e),e}finally{const e=r.indexOf(a);e>-1&&r.splice(e,1),c()}return d})));if(t?.log(`Done running ${e.length} SOQL ${e.length>1?"queries":"query"}.`),o.length>0)return Promise.reject(o[0]);const p=d.filter((e=>"fulfilled"===e.status)).map((e=>e.value));return Promise.resolve(p)}async dependenciesQuery(e,t){this._watchDog?.beforeRequest(),t?.log(`Starting to call Tooling API for dependency API call of ${e.length} item(s)...`);const s=[];let a;for(let t=0;t<e.length;t+=100){a&&5!==a.compositeRequest.length||(a={allOrNone:!1,compositeRequest:[]},s.push(a));const r=`'${e.slice(t,t+100).join("','")}'`;a.compositeRequest.push({method:"GET",url:`/services/data/v${this._apiVersion}.0/tooling/query?q=SELECT MetadataComponentId, MetadataComponentName, MetadataComponentType, RefMetadataComponentId, RefMetadataComponentName, RefMetadataComponentType FROM MetadataComponentDependency WHERE RefMetadataComponentId IN (${r}) OR MetadataComponentId IN (${r}) `,referenceId:`chunk${t}`})}let r=s.length,i=0,n=0;const o=await Promise.all(s.map((async e=>{try{const t=await this._connection.tooling.request({url:"/tooling/composite",method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}});return this._watchDog?.afterRequest(),i++,t}catch(e){n++}finally{r--,t?.log(`Processing ${s.length} Tooling composite queries... Pending: ${r}, Done: ${i}, Error: ${n}`)}})));t?.log("Got all the results");const c=[],l=[],d=new Set;return o.forEach((s=>{s.compositeResponse.forEach((s=>{if(200===s.httpStatusCode)t?.log(`This response had a code: 200 so we add the ${s?.body?.records?.length} records`),c.push(...s.body.records.map((e=>{const t=this.caseSafeId(e.MetadataComponentId),s=this.caseSafeId(e.RefMetadataComponentId),a=`${t}-${s}`;return d.has(a)?null:(d.add(a),{id:t,name:e.MetadataComponentName,type:e.MetadataComponentType,url:this.setupUrl(t,e.MetadataComponentType),refId:s,refName:e.RefMetadataComponentName,refType:e.RefMetadataComponentType,refUrl:this.setupUrl(s,e.RefMetadataComponentType)})})).filter((e=>null!==e)));else{const a=s.body[0].errorCode;if("UNKNOWN_EXCEPTION"!==a){t?.log(`This response had a code: ${a}`);const r=new TypeError(`One of the request had an issue with HTTP errorCode=${a}`);throw Object.assign(r,{context:{when:"Calling Composite Tooling API to get dependencies.",what:{ids:e,body:s.body}}})}t?.log(`This response had a code: ${a}`),l.push(...e)}}))})),{records:c,errors:l}}async readMetadata(e,t){this._watchDog?.beforeRequest(),t?.log(`Starting to call Metadata API for ${e.length} types...`),await Promise.all(e.filter((e=>e.members?.includes("*"))).map((async e=>{try{const t=await this._connection.metadata.list([{type:e.type}],this._apiVersion);this._watchDog?.afterRequest(),e.members=e.members.filter((e=>"*"!==e)),fs(t).forEach((t=>{e.members.push(t.fullName)}))}catch(s){throw t?.log(`The method metadata.list returned an error: ${JSON.stringify(s)}`),Object.assign(s,{context:{when:"Calling Metadata API to get a list of metadata.",what:{type:e.type,apiVersion:this._apiVersion}}})}})));const s=[],a=new Map;return e.forEach((e=>{for(t?.log(`Init the response array for this type: ${e.type}`),a.set(e.type,[]),t?.log(`Starting looping for type ${e.type} and metadata.members.length=${e.members.length}`);e.members.length>0;){const r=e.members.splice(0,10);s.push(new Promise((async(s,i)=>{t?.log(`Try to call metadata read for type ${e.type} and currentMembers=${r}`);try{const t=await this._connection.metadata.read(e.type,r);this._watchDog?.afterRequest(),a.get(e.type).push(...fs(t)),s()}catch(s){t?.log(`The method metadata.read returned an error: ${JSON.stringify(s)}`),i(Object.assign(s,{context:{when:"Calling Metadata API to read a list of metadata.",what:{type:e.type,pendingMembers:e.members,membersInProcess:r}}}))}})))}})),t?.log(`Calling all promises: ${s.length}`),await Promise.all(s),t?.log(`All promises ended and response is like: ${JSON.stringify(Array.from(a.entries()))}`),a}async readMetadataAtScale(e,t,s,a){this._watchDog?.beforeRequest();const r=[];let i;t.forEach(((t,s)=>{i&&5!==i.compositeRequest.length||(i={allOrNone:!1,compositeRequest:[]},r.push(i)),i.compositeRequest.push({method:"GET",url:`/services/data/v${this._apiVersion}.0/tooling/sobjects/${e}/${t}`,referenceId:`chunk${s}`})}));const n=await Promise.all(r.map((e=>(this._watchDog?.afterRequest(),this._connection.tooling.request({url:"/tooling/composite",method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}}))))),o=[];return n.forEach((a=>{a.compositeResponse.forEach((a=>{if(200===a.httpStatusCode)o.push(a.body);else{const r=a.body[0].errorCode;if(s&&s.includes&&!1===s.includes(r)){const s=new TypeError(`One of the request for type=${e} had an issue with HTTP errorCode=${r}`);throw Object.assign(s,{context:{when:"Calling Composite Tooling API to get metadata at scale.",what:{type:e,ids:t,body:a.body}}})}}}))})),o}async describeGlobal(e){this._watchDog?.beforeRequest();const t=await this._connection.describeGlobal();return t.sobjects.push(Ss),this._watchDog?.afterRequest(),t.sobjects}async describe(e,t){if("Activity"===e)return Ss;this._watchDog?.beforeRequest();const s=await this._connection.describe(e);return this._watchDog?.afterRequest(),s}async recordCount(e,t){this._watchDog?.beforeRequest();const s=await this._connection.request({url:`/limits/recordCount?sObjects=${e}`,method:"GET"});return this._watchDog?.afterRequest(),Array.isArray(s?.sObjects)&&1===s?.sObjects.length?s?.sObjects[0].count:0}async runAllTests(e){this._watchDog?.beforeRequest();const t=await this._connection.request({url:"/tooling/runTestsAsynchronous",method:"POST",body:'{ "testLevel": "RunLocalTests", "skipCodeCoverage": false }',headers:{"Content-Type":"application/json"}});return this._watchDog?.afterRequest(),t}async compileClasses(e,t){this._watchDog?.beforeRequest();const s=Date.now(),a=[];let r,i=0;e.forEach((e=>{r&&5!==r.compositeRequest.length||(i++,r={allOrNone:!1,compositeRequest:[{method:"POST",url:`/services/data/v${this._apiVersion}.0/tooling/sobjects/MetadataContainer`,referenceId:"container",body:{Name:`container-${s}-${i}`}},{method:"POST",url:`/services/data/v${this._apiVersion}.0/tooling/sobjects/ContainerAsyncRequest`,referenceId:"request",body:{MetadataContainerId:"@{container.id}",IsCheckOnly:!0}}]},a.push(r)),r.compositeRequest.push({method:"POST",url:`/services/data/v${this._apiVersion}.0/tooling/sobjects/ApexClassMember`,referenceId:e.id,body:{MetadataContainerId:"@{container.id}",ContentEntityId:e.id,Body:e.sourceCode}})}));const n=a.map((e=>(this._watchDog?.afterRequest(),this._connection.tooling.request({url:"/tooling/composite",method:"POST",body:JSON.stringify(e),headers:{"Content-Type":"application/json"}})))),o=await Promise.all(n);return this._watchDog?.afterRequest(),o}}const fs=e=>e?Array.isArray(e)?e:[e]:[],Ss={name:"Activity",label:"Activity",labelPlural:"Activities",customSetting:!1,custom:!1,keyPrefix:"00T"};exports.API=class{get version(){return"Boron [B,5]"}get salesforceApiVersion(){return this._sfdcManager.apiVersion}_recipeManager;_datasetManager;_sfdcManager;_cacheManager;_logger;_usageTermsAccepted;constructor(e,t,s,a,r,i){this._logger=new Lt(i),this._sfdcManager=new ms(t,e),this._cacheManager=new Le({compress:r.compress,decompress:r.decompress,encode:a.encode,decode:a.decode,storage:s}),this._datasetManager=new Dt(this._sfdcManager,this._cacheManager,this._logger),this._recipeManager=new us(this._datasetManager,this._logger),this._usageTermsAccepted=!1}removeAllFromCache(){this._cacheManager.clear()}getCacheInformation(){return this._cacheManager.details()}getScoreRule(e){return Te.AllScoreRules[e]}getAllScoreRules(){return Te.AllScoreRules}getAllScoreRulesAsDataMatrix(){const e=u.create();return Te.AllScoreRules.forEach((t=>{e.setRowHeader(`${t.id}`,t),t.applicable.forEach((s=>{e.addValueToProperty(`${t.id}`,s.label,"true")}))})),e.toDataMatrix()}get dailyApiRequestLimitInformation(){return this._sfdcManager.dailyApiRequestLimitInformation}async runAllTestsAsync(){return this._sfdcManager.runAllTests(this._logger.toSimpleLogger("Run All Tests"))}async compileClasses(e){return this._sfdcManager.compileClasses(e,this._logger.toSimpleLogger(`Compile ${e.length} classe(s)`))}async getOrganizationInformation(){return await this._recipeManager.run(F.ORGANIZATION)}async checkUsageTerms(){return!0!==(await this.getOrganizationInformation()).isProduction||!1!==this._usageTermsAccepted}acceptUsageTerms(){this._usageTermsAccepted=!0}async checkCurrentUserPermissions(){const e=await this._recipeManager.run(F.CURRENT_USER_PERMISSIONS,["ModifyAllData","AuthorApex","ApiEnabled","InstallPackaging"]);if(!1===e.get("ModifyAllData")||!1===e.get("AuthorApex")||!1===e.get("ApiEnabled")||!1===e.get("InstallPackaging"))throw new TypeError(`Current User Permission Access is not enough to run the application <br /><br />- <b>Modify All Data</b> (Create, edit, and delete all organization data, regardless of sharing settings) [PermissionsModifyAllData] is set to ${e.get("PermissionsModifyAllData")} <br />- <b>Author Apex</b> (Create Apex classes and triggers) [PermissionsAuthorApex] is set to ${e.get("PermissionsAuthorApex")} <br />- <b>API Enabled</b> (Access any Salesforce.com API) [PermissionsApiEnabled] is set to ${e.get("PermissionsApiEnabled")} <br />- <b>Download AppExchange Packages</b> (Install or uninstall AppExchange packages as system administrators) [PermissionsInstallPackaging] is set to ${e.get("PermissionsInstallPackaging")} <br />`);return!0}async getPackages(){return await this._recipeManager.run(F.PACKAGES)}removeAllPackagesFromCache(){this._recipeManager.clean(F.PACKAGES)}async getObjectTypes(){return await this._recipeManager.run(F.OBJECT_TYPES)}async getObjects(e,t){return await this._recipeManager.run(F.OBJECTS,e,t)}removeAllObjectsFromCache(){this._recipeManager.clean(F.OBJECTS)}async getObject(e){return await this._recipeManager.run(F.OBJECT,e)}removeObjectFromCache(e){this._recipeManager.clean(F.OBJECT,e)}async getObjectPermissionsPerParent(e){return await this._recipeManager.run(F.OBJECT_PERMISSIONS,e)}removeAllObjectPermissionsFromCache(){this._recipeManager.clean(F.OBJECT_PERMISSIONS)}async getApplicationPermissionsPerParent(e){return await this._recipeManager.run(F.APP_PERMISSIONS,e)}removeAllAppPermissionsFromCache(){this._recipeManager.clean(F.APP_PERMISSIONS)}async getCustomFields(e,t,s){return await this._recipeManager.run(F.CUSTOM_FIELDS,e,t,s)}removeAllCustomFieldsFromCache(){this._recipeManager.clean(F.CUSTOM_FIELDS)}async getPermissionSets(e){return await this._recipeManager.run(F.PERMISSION_SETS,e)}removeAllPermSetsFromCache(){this._recipeManager.clean(F.PERMISSION_SETS)}async getPermissionSetLicenses(){return await this._recipeManager.run(F.PERMISSION_SET_LICENSES)}removeAllPermSetLicensesFromCache(){this._recipeManager.clean(F.PERMISSION_SET_LICENSES)}async getProfiles(e){return await this._recipeManager.run(F.PROFILES,e)}removeAllProfilesFromCache(){this._recipeManager.clean(F.PROFILES)}async getProfileRestrictions(e){return await this._recipeManager.run(F.PROFILE_RESTRICTIONS,e)}removeAllProfileRestrictionsFromCache(){this._recipeManager.clean(F.PROFILE_RESTRICTIONS)}async getProfilePasswordPolicies(){return await this._recipeManager.run(F.PROFILE_PWD_POLICIES)}removeAllProfilePasswordPoliciesFromCache(){this._recipeManager.clean(F.PROFILE_PWD_POLICIES)}async getActiveUsers(){return await this._recipeManager.run(F.ACTIVE_USERS)}removeAllActiveUsersFromCache(){this._recipeManager.clean(F.ACTIVE_USERS)}async getCustomLabels(e){return await this._recipeManager.run(F.CUSTOM_LABELS,e)}removeAllCustomLabelsFromCache(){this._recipeManager.clean(F.CUSTOM_LABELS)}async getLightningWebComponents(e){return await this._recipeManager.run(F.LIGHTNING_WEB_COMPONENTS,e)}removeAllLightningWebComponentsFromCache(){this._recipeManager.clean(F.LIGHTNING_WEB_COMPONENTS)}async getLightningAuraComponents(e){return await this._recipeManager.run(F.LIGHTNING_AURA_COMPONENTS,e)}removeAllLightningAuraComponentsFromCache(){this._recipeManager.clean(F.LIGHTNING_AURA_COMPONENTS)}async getLightningPages(e){return await this._recipeManager.run(F.LIGHTNING_PAGES,e)}removeAllLightningPagesFromCache(){this._recipeManager.clean(F.LIGHTNING_PAGES)}async getVisualForceComponents(e){return await this._recipeManager.run(F.VISUALFORCE_COMPONENTS,e)}removeAllVisualForceComponentsFromCache(){this._recipeManager.clean(F.VISUALFORCE_COMPONENTS)}async getVisualForcePages(e){return await this._recipeManager.run(F.VISUALFORCE_PAGES,e)}removeAllVisualForcePagesFromCache(){this._recipeManager.clean(F.VISUALFORCE_PAGES)}async getPublicGroups(){return await this._recipeManager.run(F.PUBLIC_GROUPS)}removeAllPublicGroupsFromCache(){this._recipeManager.clean(F.PUBLIC_GROUPS)}async getQueues(){return await this._recipeManager.run(F.QUEUES)}removeAllQueuesFromCache(){this._recipeManager.clean(F.QUEUES)}async getApexClasses(e){return await this._recipeManager.run(F.APEX_CLASSES,e)}removeAllApexClassesFromCache(){this._recipeManager.clean(F.APEX_CLASSES)}async getApexTests(e){return await this._recipeManager.run(F.APEX_TESTS,e)}removeAllApexTestsFromCache(){this._recipeManager.clean(F.APEX_TESTS)}async getApexTriggers(e){return await this._recipeManager.run(F.APEX_TRIGGERS,e)}removeAllApexTriggersFromCache(){this._recipeManager.clean(F.APEX_TRIGGERS)}async getApexUncompiled(e){return await this._recipeManager.run(F.APEX_UNCOMPILED,e)}removeAllApexUncompiledFromCache(){this._recipeManager.clean(F.APEX_UNCOMPILED)}async getRoles(){return await this._recipeManager.run(F.USER_ROLES)}removeAllRolesFromCache(){this._recipeManager.clean(F.USER_ROLES)}async getRolesTree(){const e=await this.getRoles(),t=new Map,s="__i am root__";return e.forEach((e=>{!1===t.has(e.id)&&t.set(e.id,{id:e.id});const a=t.get(e.id);a.record||(a.record=e);const r=!0===e.hasParent?e.parentId:s;!1===t.has(r)&&t.set(r,{id:r});const i=t.get(r);i.children||(i.children=[]),i.children.push(a)})),t.get(s)}async getWorkflows(){return await this._recipeManager.run(F.WORKFLOWS)}removeAllWorkflowsFromCache(){this._recipeManager.clean(F.WORKFLOWS)}async getFieldPermissionsPerParent(e,t){return await this._recipeManager.run(F.FIELD_PERMISSIONS,e,t)}removeAllFieldPermissionsFromCache(){this._recipeManager.clean(F.FIELD_PERMISSIONS)}async getFlows(){return await this._recipeManager.run(F.FLOWS)}removeAllFlowsFromCache(){this._recipeManager.clean(F.FLOWS)}async getProcessBuilders(){return await this._recipeManager.run(F.PROCESS_BUILDERS)}removeAllProcessBuildersFromCache(){this._recipeManager.clean(F.PROCESS_BUILDERS)}async getValidationRules(){return await this._recipeManager.run(F.VALIDATION_RULES)}removeAllValidationRulesFromCache(){this._recipeManager.clean(F.VALIDATION_RULES)}},exports.BasicLoggerIntf=P,exports.CodeScanner=p,exports.Data=m,exports.DataCacheItem=class{name;isEmpty;isMap;length;created},exports.DataCacheManagerIntf=t,exports.DataDependencies=class{hadError;using;referenced;referencedByTypes},exports.DataDependenciesFactory=g,exports.DataDependencyItem=class{id;name;type;url},exports.DataFactoryInstanceIntf=I,exports.DataFactoryIntf=E,exports.DataItemInCache=class extends e{content},exports.DataMatrix=class{columnHeaders;rows},exports.DataMatrixColumnHeader=class{id;ref},exports.DataMatrixFactory=u,exports.DataMatrixRow=class{header;data},exports.DataMatrixWorking=h,exports.DataWithDependencies=f,exports.DataWithoutScoring=S,exports.Dataset=M,exports.DatasetAliases=D,exports.DatasetManagerIntf=_,exports.DatasetRunInformation=w,exports.ItemInCache=e,exports.LoggerIntf=R,exports.MetadataItemInCache=class extends e{type;length},exports.OBJECTTYPE_ID_CUSTOM_BIG_OBJECT=H,exports.OBJECTTYPE_ID_CUSTOM_EVENT=k,exports.OBJECTTYPE_ID_CUSTOM_EXTERNAL_SOBJECT=B,exports.OBJECTTYPE_ID_CUSTOM_METADATA_TYPE=W,exports.OBJECTTYPE_ID_CUSTOM_SETTING=V,exports.OBJECTTYPE_ID_CUSTOM_SOBJECT=$,exports.OBJECTTYPE_ID_KNOWLEDGE_ARTICLE=j,exports.OBJECTTYPE_ID_STANDARD_SOBJECT=G,exports.Processor=L,exports.Recipe=N,exports.RecipeAliases=F,exports.RecipeManagerIntf=x,exports.SFDC_ApexClass=O,exports.SFDC_ApexTestMethodResult=b,exports.SFDC_ApexTrigger=q,exports.SFDC_AppPermission=ye,exports.SFDC_Application=Ce,exports.SFDC_CustomLabel=J,exports.SFDC_Field=Y,exports.SFDC_FieldPermission=be,exports.SFDC_FieldSet=X,exports.SFDC_Flow=K,exports.SFDC_FlowVersion=z,exports.SFDC_Group=Z,exports.SFDC_LightningAuraComponent=ee,exports.SFDC_LightningPage=te,exports.SFDC_LightningWebComponent=se,exports.SFDC_Limit=ae,exports.SFDC_Object=Q,exports.SFDC_ObjectPermission=Oe,exports.SFDC_ObjectRelationShip=Ae,exports.SFDC_ObjectType=v,exports.SFDC_Organization=Me,exports.SFDC_Package=_e,exports.SFDC_PageLayout=De,exports.SFDC_PermissionSet=ie,exports.SFDC_PermissionSetLicense=ne,exports.SFDC_Profile=re,exports.SFDC_ProfileIpRangeRestriction=le,exports.SFDC_ProfileLoginHourRestriction=de,exports.SFDC_ProfilePasswordPolicy=oe,exports.SFDC_ProfileRestrictions=ce,exports.SFDC_RecordType=pe,exports.SFDC_User=ge,exports.SFDC_UserRole=ue,exports.SFDC_ValidationRule=he,exports.SFDC_VisualForceComponent=me,exports.SFDC_VisualForcePage=fe,exports.SFDC_WebLink=Se,exports.SFDC_Workflow=Ee,exports.SalesforceManagerIntf=A,exports.SalesforceMetadataRequest=class{type;members},exports.SalesforceMetadataTypes=U,exports.SalesforceQueryRequest=class{string;tooling;byPasses;queryMoreField},exports.SalesforceUsageInformation=T,exports.SalesforceWatchDog=C,exports.ScoreRule=class{id;description;formula;errorMessage;badField;applicable},exports.SecretSauce=Te,exports.SimpleLoggerIntf=class{log(e){throw new TypeError('You need to implement the method "log()"')}debug(e){throw new TypeError('You need to implement the method "debug()"')}};
