<apex:page >
    <apex:includeLightning />
    <style>
        #app {
            height: 100vh;
        }
        #loading {
            display:  flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100%;
        }
        #loading-logo {
            display:  flex;
            align-items: center;
        }
        #loading-text {
        }
        .slds-dropdown-trigger_click .slds-dropdown {
            min-width: fit-content;
        }
    </style>
    <div id="app">
        <div id="loading">
            <div id="loading-logo">
                <object type="image/svg+xml" data="{!URLFOR($Resource.OrgCheck_SR, 'img/Mascot+Animated.svg')}" width="200" height="200">
                    <img src="{!URLFOR($Resource.OrgCheck_SR, 'img/Mascot+Animated.svg')}" width="200" height="200" />
                </object>
                <object type="image/svg+xml" data="{!URLFOR($Resource.OrgCheck_SR, 'img/Logo.svg')}" width="250" height="250">
                    <img src="{!URLFOR($Resource.OrgCheck_SR, 'img/Logo.svg')}" width="250" height="250" />
                </object>
            </div>
            <div id="loading-text">
                Please wait while <b>Org Check</b> is loading...
            </div>
        </div>
    </div>  
    <script>
    /* Reset the cache of previous versions */
    try {
        Object.keys(localStorage)
            .filter(e => e.startsWith('OrgCheck.'))
            .forEach(e => localStorage.removeItem(e));
    } catch (e) {
        console.error('Error while resetting the cache of previous Org Check versions (prior to Lithium).')
    }
    /* Determine the namespace where the app is running (if local/standalone the package is 'c') */ 
    const firstSubDomain = document.location.host.split('.')[0];
    const subDomainParts = firstSubDomain.split('--');
    const namespace = subDomainParts.pop(); // last part is the package name
    /* Insert LWC app */
    const app = `${namespace}:OrgCheck_App_Aura`;
    const component = `${namespace}:orgcheckApp`;
    $Lightning.use(app, () => {
        $Lightning.createComponent(
            component, 
            { 
                accessToken: '{! JSENCODE($Api.Session_Id) }', 
                userId: '{! JSENCODE($User.Id) }' 
            },
            'app',
            () => {
                document.getElementById('loading').style.display = 'none';
            }
        );
    });
    </script>
</apex:page>